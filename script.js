var sketchProc = function(processingInstance) {
    with (processingInstance) {
        size(609, 600); 
        frameRate(60);
        /**
         * Up Arrow or W to move forward
         * Left/Right or A/D to turn
         * Space bar to shoot
        */
        
        function radians(degrees) {
            return PI*degrees/180;
        }

        //Toggle Sound
        var sound = false;

        //Black Hole {
        var black_hole = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -15923697, -15923697, -15923697, -15923697, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -13093319, -15923697, -15594981, -13166785, -15923697, -15923697, -15923697, -10001049, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -12115630, -15923697, -4895793, -16777216, -15923697, -15923697, -15923697, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -15923697, -8833135, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -16120564, -4502058, -8833135, -15923697, -15923697, -15923697, -15923697, -15923697, -14674888, -15923697, -16120564, -16120564, -16120564, -15923697, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -4305191, -8110946, -15923697, -14872014, -15923697, -15923697, -15923697, -15923697, -15923697, -15726569, -4895793, -4895793, -4502058, -12969403, -12443828, -15923697, -15923697, -15923697, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -14872014, -16777216, -8110946, -15923697, -15923697, -15923697, -15923697, -15923697, -11918763, -16120564, -7848285, -16777216, -16777216, -14872014, -8242276, -7848285, -3976993, -15923697, -15923697, -15923697, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -4502058, -8833135, -15923697, -15923697, -15923697, -15923697, -15923697, -4502058, -9161334, -15923697, -15923697, -15923697, -15923697, -8110946, -8110946, -16777216, -14674888, -15923697, -15923697, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -12115630, -15923697, -7848285, -16777216, -15923697, -15923697, -15923697, -8110946, -8110946, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -16383225, -8110946, -15923697, -15923697, -15923697, -15923697], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -15923697, -7848285, -16777216, -16383225, -15923697, -15923697, -8110946, -3976993, -15923697, -11918763, -15923697, -15923697, -15923697, -15923697, -15923697, -3976993, -8110946, -15923697, -15923697, -15923697], [-16711936, -10658979, -15923697, -15923697, -10658979, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -13166785, -9161334, -14938847, -14872014, -15923697, -8110946, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -16120564, -13166785, -15923697, -15135971, -15923697], [-15923697, -15923697, -15923697, -15923697, -14674888, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -7848285, -8110946, -15923697, -9161334, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -12115630, -15923697, -15923697, -15923697, -15923697, -15923697], [-15923697, -16383225, -16120564, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -12115630, -4502058, -4502058, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -16711936], [-15923697, -15923697, -4305191, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -13166785, -8110946, -4502058, -16120564, -15923697, -15923697, -16777216, -16711936, -16777216, -16777216, -16711936, -16711936], [-16711936, -15923697, -4305191, -7848285, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -11918763, -15923697, -16120564, -16383225, -15923697, -16777216, -16777216, -8110946, -3976993, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -15923697, -14674888, -8110946, -8110946, -15923697, -15923697, -15923697, -15923697, -12115630, -15923697, -15923697, -7848285, -15923697, -15923697, -6011973, -15923697, -15923697, -15923697, -15923697, -15923697, -16777216, -4502058, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -15923697, -15923697, -4502058, -8110946, -15923697, -15923697, -15923697, -15923697, -15923697, -14151120, -4305191, -15923697, -15923697, -6011973, -15923697, -15923697, -15923697, -15923697, -15923697, -16777216, -16383225, -4502058, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -15923697, -15923697, -15923697, -3976993, -7848285, -8242276, -16777216, -8242276, -7848285, -7061074, -16777216, -15923697, -15923697, -9161334, -15923697, -15923697, -15923697, -15923697, -15923697, -16777216, -16383225, -4502058, -14609093, -15923697, -15923697, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -15923697, -14544856, -15923697, -11787685, -13166785, -11787685, -15923697, -15923697, -15594981, -15923697, -15923697, -9161334, -15923697, -15923697, -15923697, -15923697, -15923697, -16383225, -9161334, -4502058, -15923697, -16383225, -15923697, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -15923697, -15923697, -15594981, -15923697, -15923697, -12443828, -15923697, -15923697, -15923697, -9161334, -12115630, -15923697, -15923697, -15923697, -15923697, -15923697, -8110946, -4502058, -15923697, -15923697, -15923697, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -16777216, -8110946, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -8110946, -4502058, -15923697, -15923697, -15923697, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -16777216, -13166785, -15923697, -15923697, -15923697, -15923697, -15923697, -11918763, -8110946, -4502058, -15923697, -15923697, -16383225, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -13166785, -13691338, -7061074, -11787685, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -12115630, -6011973, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -14609093, -15923697, -15923697, -7848285, -7848285, -7848285, -8110946, -4305191, -16777216, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -14609093, -4305191, -15923697, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -4502058, -4502058, -4502058, -4502058, -4502058, -15923697, -16383225, -14938847, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -4305191, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15726569, -16120564, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -16777216, -4502058, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -12969403, -16120564, -15923697, -15923697, -15923697, -15923697, -15923697, -16777216, -16777216, -16777216, -16711936, -15923697, -15923697, -16777216, -16777216, -16383225, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -15923697, -16120564, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -15923697, -15923697, -15923697, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}
        //Nuke {
        var nuke =[[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -1, -1, -1, -1, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -1, -1, -1, -1, -16777216, -16777216, -16777216, -16777216, -1, -1, -1, -1, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -1, -1, -16777216, -16777216, -4056576, -4056576, -7597312, -4056576, -4056576, -7597312, -4056576, -4056576, -16777216, -16777216, -1, -1, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -1, -16777216, -16777216, -15048428, -15048428, -15048428, -15048428, -13585114, -6569423, -6569423, -13585114, -15048428, -15048428, -15048428, -15048428, -16777216, -16777216, -1, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -1, -1, -16777216, -15048428, -15048428, -15048428, -15048428, -13585114, -13585114, -6569423, -6569423, -6569423, -6569423, -13585114, -13585114, -15048428, -15048428, -15048428, -15048428, -16777216, -1, -1, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -1, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -13092808, -13092808, -13092808, -7697782, -7697782, -13092808, -13092808, -13092808, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -1, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -1, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -13092808, -13092808, -13092808, -7697782, -7697782, -13092808, -13092808, -13092808, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -1, -16711936, -16711936, -16711936], [-16711936, -1, -1, -16777216, -13585114, -13585114, -13585114, -6569423, -6569423, -6569423, -6569423, -6569423, -6569423, -1, -1, -1, -1, -6569423, -6569423, -6569423, -6569423, -6569423, -6569423, -13585114, -13585114, -13585114, -16777216, -1, -1, -16711936], [-16711936, -1, -1, -16777216, -39399, -39399, -21440, -21440, -21440, -21440, -13535, -13535, -13535, -3989, -3989, -3989, -3989, -13535, -13535, -13535, -21440, -21440, -21440, -13585114, -4688353, -4688353, -16777216, -1, -1, -16711936], [-16711936, -1, -1, -16777216, -39399, -39399, -21440, -21440, -21440, -21440, -13535, -13535, -13535, -3989, -1, -1, -3989, -13535, -13535, -13535, -21440, -21440, -21440, -21440, -4688353, -4688353, -16777216, -1, -1, -16711936], [-1, -16777216, -16777216, -39399, -39399, -39399, -21440, -15048428, -15048428, -21440, -13535, -13535, -13535, -3989, -1, -1, -3989, -13535, -13535, -13535, -21440, -21440, -21440, -21440, -15048428, -15048428, -21440, -16777216, -16777216, -1], [-1, -16777216, -16777216, -15048428, -15048428, -15048428, -13585114, -13585114, -13585114, -13585114, -13585114, -6569423, -6569423, -1, -1, -1, -1, -6569423, -6569423, -13585114, -13585114, -13585114, -13585114, -13585114, -15048428, -15048428, -15048428, -16777216, -16777216, -1], [-1, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -13092808, -13092808, -13092808, -7697782, -7697782, -13092808, -13092808, -13092808, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -1], [-1, -16777216, -16777216, -15048428, -6569423, -6569423, -6569423, -6569423, -6569423, -6569423, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -6569423, -6569423, -6569423, -6569423, -6569423, -6569423, -15048428, -16777216, -16777216, -1], [-1, -16777216, -16777216, -15048428, -15048428, -15048428, -13585114, -13585114, -13585114, -13585114, -13585114, -6569423, -6569423, -1, -1, -1, -1, -6569423, -6569423, -13585114, -13585114, -13585114, -13585114, -13585114, -15048428, -15048428, -15048428, -16777216, -16777216, -1], [-16711936, -1, -1, -16777216, -15048428, -15048428, -15048428, -13585114, -13585114, -13585114, -13585114, -6569423, -6569423, -16777216, -11008, -11008, -16777216, -6569423, -6569423, -13585114, -13585114, -13585114, -13585114, -15048428, -15048428, -15048428, -16777216, -1, -1, -16711936], [-16711936, -1, -1, -16777216, -15048428, -15048428, -15048428, -13585114, -13585114, -13585114, -13585114, -11008, -11008, -11008, -16777216, -16777216, -11008, -11008, -11008, -13585114, -13585114, -13585114, -13585114, -15048428, -15048428, -15048428, -16777216, -1, -1, -16711936], [-16711936, -1, -1, -16777216, -15048428, -15048428, -15048428, -13585114, -13585114, -13585114, -13585114, -13585114, -13585114, -6569423, -6569423, -6569423, -6569423, -13585114, -13585114, -15048428, -13585114, -13585114, -13585114, -15048428, -15048428, -15048428, -16777216, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -1, -16777216, -16777216, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -16777216, -16777216, -1, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -1, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -13092808, -13092808, -13092808, -13092808, -7697782, -7697782, -13092808, -13092808, -13092808, -13092808, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -1, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -1, -1, -16777216, -15048428, -15048428, -13585114, -13585114, -13585114, -13585114, -13585114, -13585114, -13585114, -13585114, -13585114, -13585114, -13585114, -13585114, -15048428, -15048428, -16777216, -1, -1, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -1, -1, -16777216, -16777216, -16777216, -15048428, -15048428, -13585114, -13585114, -13585114, -16777216, -16777216, -13585114, -13585114, -13585114, -15048428, -15048428, -16777216, -16777216, -16777216, -1, -1, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -1, -16777216, -16777216, -15048428, -15048428, -15048428, -16777216, -16777216, -15048428, -15048428, -15048428, -16777216, -16777216, -15048428, -15048428, -15048428, -16777216, -16777216, -15048428, -15048428, -15048428, -16777216, -16777216, -1, -16711936, -16711936, -16711936], [-16711936, -1, -1, -16777216, -15048428, -15048428, -15048428, -16777216, -16777216, -1, -1, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -1, -1, -16777216, -16777216, -15048428, -15048428, -15048428, -16777216, -1, -1, -16711936], [-16711936, -1, -1, -16777216, -15048428, -15048428, -15048428, -16777216, -16777216, -1, -1, -1, -1, -1, -16777216, -16777216, -1, -1, -1, -1, -1, -16777216, -16777216, -15048428, -15048428, -15048428, -16777216, -1, -1, -16711936], [-1, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -13092808, -13092808, -13092808, -7697782, -7697782, -13092808, -13092808, -13092808, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -1], [-1, -16777216, -16777216, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -13585114, -13585114, -13585114, -13585114, -6569423, -1, -1, -6569423, -13585114, -13585114, -13585114, -13585114, -15048428, -15048428, -15048428, -15048428, -15048428, -15048428, -16777216, -16777216, -1], [-1, -16777216, -16777216, -15048428, -15048428, -15048428, -16777216, -16777216, -16777216, -16777216, -16777216, -13585114, -13585114, -6569423, -1, -1, -6569423, -13585114, -13585114, -16777216, -16777216, -16777216, -16777216, -16777216, -15048428, -15048428, -15048428, -16777216, -16777216, -1], [-16711936, -1, -1, -16777216, -16777216, -16777216, -1, -1, -1, -1, -1, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -1, -1, -1, -1, -1, -16777216, -16777216, -16777216, -1, -1, -16711936], [-16711936, -16711936, -16711936, -1, -1, -1, -16711936, -16711936, -16711936, -16711936, -16711936, -1, -1, -1, -1, -1, -1, -1, -1, -16711936, -16711936, -16711936, -16711936, -16711936, -1, -1, -1, -16711936, -16711936, -16711936]];
        //}
        //Explosion {
        var explosion = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -5280986, -3047389, -3047389, -5280986, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -5280986, -5280986, -5280986, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -5280986, -3047389, -3047389, -3047389, -27367, -5280986, -16711936, -16711936, -16711936, -16711936, -16711936, -5280986, -3047389, -3047389, -27367, -5280986, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -3047389, -1, -3037, -3037, -27367, -27367, -3047389, -5280986, -3047389, -5280986, -5280986, -3047389, -27367, -3037, -3037, -27367, -5280986, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -5280986, -27367, -3037, -3037, -27367, -27367, -27367, -3047389, -3047389, -27367, -27367, -5280986, -27367, -27367, -3037, -27367, -27367, -5280986, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -8958686, -5280986, -3047389, -27367, -27367, -27367, -3047389, -3037, -27367, -3037, -27367, -27367, -3047389, -3047389, -27367, -27367, -27367, -27367, -3047389, -5280986, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -5280986, -3047389, -27367, -3047389, -27367, -27367, -3047389, -3047389, -27367, -27367, -27367, -27367, -27367, -3047389, -5280986, -3047389, -3047389, -3047389, -3047389, -27367, -27367, -3047389, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -5280986, -27367, -1, -27367, -3047389, -27367, -3047389, -3047389, -27367, -3037, -27367, -3047389, -5280986, -5280986, -27367, -27367, -1, -27367, -3047389, -3047389, -27367, -3047389, -27367, -8958686, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -5280986, -1, -3037, -27367, -27367, -3047389, -5280986, -27367, -3037, -3037, -3037, -27367, -3047389, -3047389, -27367, -3037, -3037, -3037, -27367, -5280986, -3047389, -3047389, -3047389, -5280986, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -5280986, -27367, -3037, -27367, -3037, -27367, -3047389, -3037, -3037, -3037, -27367, -3037, -27367, -1, -3037, -27367, -3037, -3037, -3037, -3047389, -5280986, -27367, -1, -27367, -5280986, -8958686], [-16711936, -16711936, -16711936, -16711936, -3047389, -3047389, -27367, -27367, -27367, -27367, -3047389, -27367, -3037, -27367, -3037, -27367, -27367, -3037, -3037, -27367, -27367, -3037, -27367, -3047389, -3047389, -3037, -3037, -27367, -3047389, -5280986], [-16711936, -16711936, -16711936, -5280986, -5280986, -3047389, -27367, -27367, -3047389, -5280986, -3047389, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -3037, -27367, -27367, -3047389, -3037, -27367, -27367, -27367, -3047389, -5280986], [-16711936, -16711936, -27367, -1, -1, -27367, -3037, -27367, -5280986, -8958686, -27367, -3037, -3037, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -3047389, -27367, -27367, -3047389, -27367, -3047389, -3047389, -5280986], [-16711936, -8958686, -3037, -1, -3037, -3037, -3037, -27367, -3047389, -5280986, -27367, -3037, -1, -27367, -27367, -3047389, -27367, -27367, -27367, -27367, -3047389, -3047389, -5280986, -8958686, -5280986, -3047389, -3047389, -3047389, -3047389, -5280986], [-8958686, -27367, -3037, -3037, -3037, -3037, -27367, -3037, -27367, -27367, -27367, -3037, -3037, -27367, -5280986, -8958686, -8958686, -5280986, -3047389, -27367, -5280986, -8958686, -27367, -5280986, -3047389, -27367, -27367, -5280986, -5280986, -8958686], [-8958686, -27367, -3037, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -8958686, -8958686, -5280986, -27367, -27367, -3047389, -27367, -5280986, -5280986, -27367, -3047389, -27367, -27367, -27367, -5280986, -8958686, -16711936], [-8958686, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -27367, -8958686, -5280986, -8958686, -8958686, -5280986, -3037, -3037, -27367, -27367, -27367, -27367, -3047389, -3047389, -3047389, -27367, -27367, -27367, -8958686, -16711936, -16711936], [-8958686, -3047389, -27367, -27367, -27367, -27367, -27367, -27367, -3047389, -3047389, -3047389, -5280986, -8958686, -5280986, -27367, -3037, -27367, -27367, -27367, -27367, -3047389, -3047389, -8958686, -8958686, -3047389, -3047389, -5280986, -27367, -3047389, -16711936], [-10277091, -10277091, -27367, -27367, -27367, -27367, -27367, -27367, -3047389, -27367, -27367, -27367, -3047389, -3047389, -27367, -27367, -27367, -27367, -27367, -27367, -3047389, -3037, -3037, -27367, -27367, -5280986, -5280986, -3047389, -3047389, -8958686], [-10277091, -10277091, -3047389, -27367, -27367, -27367, -27367, -3047389, -3047389, -3047389, -27367, -27367, -3047389, -3047389, -27367, -27367, -27367, -27367, -27367, -27367, -3037, -1, -1, -3037, -3037, -27367, -5280986, -5280986, -5280986, -8958686], [-16711936, -10277091, -10277091, -5280986, -3047389, -27367, -27367, -5280986, -3047389, -27367, -3047389, -3047389, -3047389, -3047389, -3047389, -27367, -27367, -27367, -27367, -3047389, -3037, -3037, -3037, -27367, -27367, -3037, -27367, -5280986, -8958686, -10277091], [-16711936, -16711936, -10277091, -8958686, -8958686, -5280986, -5280986, -5280986, -5280986, -3047389, -27367, -3047389, -3047389, -5280986, -3047389, -27367, -27367, -3047389, -27367, -27367, -3037, -3037, -3037, -27367, -27367, -27367, -27367, -5280986, -10277091, -16711936], [-16711936, -16711936, -16711936, -8958686, -8958686, -5280986, -3047389, -3047389, -8958686, -5280986, -5280986, -5280986, -8958686, -3047389, -5280986, -5280986, -3047389, -3047389, -27367, -27367, -27367, -3037, -27367, -3037, -27367, -3037, -1, -27367, -10277091, -10277091], [-16711936, -16711936, -16711936, -16711936, -8958686, -3047389, -3047389, -3047389, -3047389, -5280986, -5280986, -5280986, -27367, -27367, -3047389, -10277091, -5280986, -3047389, -3047389, -5280986, -27367, -27367, -27367, -27367, -3037, -3037, -3037, -3047389, -8958686, -10277091], [-16711936, -16711936, -16711936, -16711936, -8958686, -3047389, -3047389, -3047389, -3047389, -5280986, -3047389, -5280986, -27367, -3047389, -27367, -8958686, -5280986, -5280986, -5280986, -5280986, -27367, -27367, -27367, -27367, -27367, -3037, -27367, -5280986, -8958686, -10277091], [-16711936, -16711936, -16711936, -16711936, -10277091, -5280986, -3047389, -3047389, -5280986, -5280986, -5280986, -5280986, -27367, -3047389, -3047389, -8958686, -5280986, -5280986, -5280986, -8958686, -5280986, -27367, -27367, -27367, -3047389, -3047389, -3047389, -5280986, -8958686, -16711936], [-16711936, -16711936, -16711936, -16711936, -10277091, -5280986, -5280986, -5280986, -3047389, -5280986, -5280986, -5280986, -3047389, -3047389, -3047389, -5280986, -8958686, -5280986, -8958686, -8958686, -5280986, -5280986, -3047389, -3047389, -27367, -5280986, -5280986, -8958686, -10277091, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -10277091, -10277091, -8958686, -10277091, -10277091, -10277091, -8958686, -5280986, -5280986, -5280986, -10277091, -8958686, -10277091, -8958686, -10277091, -8958686, -8958686, -5280986, -5280986, -5280986, -8958686, -8958686, -10277091, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -10277091, -10277091, -10277091, -10277091, -10277091, -8958686, -5280986, -5280986, -5280986, -8958686, -8958686, -10277091, -10277091, -10277091, -8958686, -8958686, -8958686, -10277091, -10277091, -10277091, -10277091, -10277091, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -10277091, -8958686, -8958686, -10277091, -10277091, -10277091, -16711936, -16711936, -10277091, -10277091, -10277091, -10277091, -10277091, -10277091, -10277091, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -10277091, -10277091, -10277091, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -10277091, -10277091, -10277091, -10277091, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}
        //Invincibility {
        var invincible = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -524544, -524544, -524544, -524544, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -524544, -524544, -524544, -524544, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -524544, -524544, -524544, -524544, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -524544, -524544, -524544, -524544, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -2304, -2304, -524544, -524544, -524544, -524544, -2304, -2304, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -2304, -2304, -524544, -524544, -524544, -524544, -2304, -2304, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -2304, -2304, -524544, -524544, -524544, -524544, -2304, -2304, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216], [-16777216, -16777216, -26368, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -2304, -2304, -524544, -524544, -524544, -524544, -2304, -2304, -2304, -2304, -524544, -524544, -524544, -524544, -524544, -26368, -26368, -16777216, -16777216], [-16777216, -16777216, -26368, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -2304, -2304, -524544, -524544, -524544, -524544, -2304, -2304, -2304, -2304, -524544, -524544, -524544, -524544, -524544, -26368, -26368, -16777216, -16777216], [-16711936, -16711936, -16777216, -16777216, -26368, -26368, -524544, -524544, -524544, -524544, -524544, -16777216, -16777216, -524544, -524544, -524544, -524544, -16777216, -16777216, -2304, -2304, -524544, -524544, -524544, -26368, -26368, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -26368, -26368, -524544, -524544, -524544, -524544, -524544, -16777216, -16777216, -524544, -524544, -524544, -524544, -16777216, -16777216, -2304, -2304, -524544, -524544, -524544, -26368, -26368, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -26368, -524544, -524544, -524544, -524544, -16777216, -16777216, -2304, -2304, -524544, -524544, -16777216, -16777216, -524544, -524544, -524544, -524544, -26368, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -26368, -524544, -524544, -524544, -524544, -16777216, -16777216, -2304, -2304, -524544, -524544, -16777216, -16777216, -524544, -524544, -524544, -524544, -26368, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -26368, -26368, -524544, -524544, -16777216, -16777216, -524544, -524544, -524544, -524544, -16777216, -16777216, -524544, -524544, -26368, -26368, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -26368, -26368, -524544, -524544, -16777216, -16777216, -524544, -524544, -524544, -524544, -16777216, -16777216, -524544, -524544, -26368, -26368, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -26368, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -2304, -2304, -524544, -524544, -26368, -26368, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -26368, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -2304, -2304, -524544, -524544, -26368, -26368, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -26368, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -524544, -26368, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -26368, -26368, -26368, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -26368, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -26368, -26368, -26368, -26368, -524544, -524544, -524544, -524544, -524544, -524544, -26368, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -26368, -26368, -524544, -524544, -524544, -26368, -26368, -26368, -26368, -16777216, -16777216, -16777216, -16777216, -26368, -26368, -26368, -26368, -524544, -524544, -524544, -26368, -26368, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -26368, -26368, -26368, -26368, -26368, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -26368, -26368, -26368, -26368, -26368, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -26368, -26368, -26368, -26368, -26368, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -26368, -26368, -26368, -26368, -26368, -16777216, -16777216, -16711936, -16711936], [-16777216, -16777216, -26368, -26368, -26368, -26368, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -26368, -26368, -26368, -26368, -16777216, -16777216], [-16777216, -16777216, -26368, -26368, -26368, -26368, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -26368, -26368, -26368, -26368, -16777216, -16777216], [-16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216], [-16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216]];
        //}
        //Spam {
        var spam = [[-16711936, -16711936, -16711936, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -16711936, -16711936, -16711936], [-16711936, -6909687, -6909687, -5001973, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -6909687, -6909687, -16711936], [-6909687, -5001973, -6909687, -6909687, -6909687, -6909687, -5001973, -5001973, -5001973, -5001973, -5001973, -6909687, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -6909687], [-6909687, -5001973, -6909687, -6909687, -6909687, -6909687, -5001973, -5001973, -5001973, -5001973, -5001973, -6909687, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -6909687], [-6909687, -6909687, -5001973, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -5001973, -6909687, -6909687], [-16711936, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -2304, -2304, -2304, -16252010, -16252010, -16252010, -2304, -2304, -2304, -16252010, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -16252010, -2304, -2304, -2304, -2304, -2304, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -2304, -2304, -16252010, -16252010, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -2304, -16252010, -16252010, -2304, -16252010, -2304, -16252010, -16252010, -16252010, -2304, -16252010, -2304, -16252010, -2304, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -2304, -16252010, -16252010, -2304, -16252010, -2304, -16252010, -16252010, -16252010, -2304, -16252010, -2304, -16252010, -2304, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -2304, -2304, -2304, -2304, -16252010, -16252010, -16252010, -2304, -2304, -2304, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -2304, -16252010, -2304, -16252010, -2304, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -16252010, -2304, -2304, -2304, -2304, -2304, -16252010, -16252010, -2304, -16252010, -2304, -16252010, -2304, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -16252010, -2304, -2304, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -2304, -16252010, -2304, -16252010, -2304, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -2304, -2304, -2304, -16252010, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -16252010, -2304, -16252010, -16252010, -2304, -16252010, -2304, -16252010, -2304, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -16252010, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2830721, -2835883, -2835883, -16252010, -16252010, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -2835883, -2835883, -2830721, -2835883, -2835883, -2835883, -2835883, -2830721, -2835883, -2835883, -2835883, -2830721, -2835883, -2835883, -2830721, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2830721, -16252010, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -2830721, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2830721, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2830721, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2830721, -2835883, -2835883, -2835883, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -1184275, -16252010, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -4052969, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -16252010, -10181, -6592, -6592, -6592, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -10181, -6592, -10181, -16252010, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -6082255, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -16252010, -16252010, -16711936], [-16711936, -16252010, -16252010, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -16252010, -16252010, -16711936], [-6909687, -16252010, -16252010, -16252010, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -2835883, -3888049, -3888049, -3888049, -16252010, -16252010, -16252010, -6909687], [-6909687, -6909687, -6909687, -16252010, -16252010, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -3888049, -16252010, -16252010, -6909687, -6909687, -6909687], [-16711936, -16711936, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -6909687, -16711936, -16711936]];
        //}
        //Mine {
        var mine = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -1893341, -1699563, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7262202, -7262202, -7262202, -7262202, -8837374, -16711936, -16711936, -16711936, -1571819, -1762268, -1437412, -1502946, -16711936, -1502443, -1634281, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7192811, -7721978, -7721978, -7721978, -8838392, -16711936, -16711936, -16711936, -1832424, -1762268, -1111786, -1637352, -16711936, -1304288, -1762268, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7720946, -7390178, -16711936, -16711936, -16711936, -16711936, -6341861, -16711936, -16711936, -16711936, -1566162, -3009261, -16711936, -16711936, -779215, -1958618, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7783392, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7193322, -16711936, -16711936, -16711936, -16711936, -16711936, -1828061, -284624, -546525, -1961187, -1961187, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -14803428, -14606049, -14606049, -14411491, -14540256, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7062757, -16711936, -2089431, -2023638, -1171663, -873699, -482011, -546525, -873699, -94426, -2023638, -2023638], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -14671842, -855312, -65794, -328968, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7259113, -16711936, -16711936, -16711936, -16711936, -1764827, -742115, -546525, -2159585, -2159585, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -14935014, -1973793, -1908000, -1184277, -14342877, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7259113, -16711936, -16711936, -16711936, -16711936, -1764827, -487393, -1074150, -1764827, -1764827, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -14737635, -14671842, -14671842, -14671842, -14606049, -14606049, -14671842, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7454694, -6931179, -6931179, -6800363, -16711936, -1304288, -1762268, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -14474463, -14606049, -14671842, -12172219, -12106426, -11974840, -11579828, -11645621, -14737635, -14869221, -14474463, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -1304288, -1762268, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -14737635, -14606049, -12369598, -12369598, -12172219, -11974840, -11909047, -11514035, -11514035, -11514035, -11514035, -11514035, -14737635, -14540256, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -14606049, -14671842, -11974329, -12303805, -11909047, -11909047, -11580082, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11053227, -14540256, -15000807, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -14671842, -14606049, -14935014, -12369598, -12303805, -11909047, -11777461, -11579828, -11514035, -11514035, -11316656, -1908511, -1908511, -12369344, -11645364, -11579828, -14606049, -14803428, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -14671842, -12566977, -12303805, -12303805, -11909047, -11909047, -11448242, -11514035, -11514035, -11514035, -11514035, -65794, -1, -12303805, -11448242, -11448242, -11579828, -14803428, -14803428, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14803428, -12369598, -12106426, -12303805, -11777461, -11974840, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -1, -1, -12303805, -11514035, -11579828, -11382449, -11382449, -14803428, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14737635, -12238010, -12106426, -11909047, -11777461, -11448242, -11514035, -11514035, -11514035, -11514035, -11514035, -11382449, -11579828, -11579828, -11645621, -11514035, -11514035, -11514035, -11514035, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14737635, -12238010, -11974840, -11909047, -11382449, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -3, -12369344, -11514035, -11514035, -11514035, -11514035, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14737635, -12238010, -11974840, -11909047, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -4013633, -11974586, -11514035, -11514035, -11514035, -11514035, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14737635, -12238010, -11974840, -11909047, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14737635, -12238010, -11974840, -11909047, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14737635, -12238010, -11974840, -11909047, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14737635, -12238010, -12303805, -12303805, -11909047, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14737635, -12238010, -12303805, -12303805, -11909047, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-14540256, -12830149, -12369598, -12303805, -11843254, -11448242, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11711414, -11645621, -11645621, -14540256, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -14671842, -12566464, -12238012, -12303805, -11909047, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11448242, -11382449, -11645621, -14540256, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -14737635, -14671842, -14869221, -12303805, -11909047, -11909047, -11448242, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11382192, -14671842, -14671842, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -14869221, -12303805, -12369598, -12369598, -11909047, -11645621, -11514035, -11514035, -11514035, -11514035, -11514035, -11514035, -11382192, -14671842, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -13685458, -13488079, -12303805, -11843254, -11579828, -11514035, -11514035, -11514035, -11514035, -13356239, -13422032, -13882326, -14671842, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -14408670, -14342877, -12303805, -11974840, -11645621, -11645621, -11645621, -11645621, -11645621, -14211291, -14408670, -15198186, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -14803428, -14737635, -14737635, -14737635, -14737635, -14737635, -14737635, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}
        //One {
        var one = [[-16711936, -16711936, -16711936, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -16711936, -16711936, -16711936], [-16711936, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -16711936], [-16711936, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -16711936], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -10197916, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1184275, -1184275, -1, -1, -1, -1, -10197916, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -1, -1, -10197916, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -1, -1, -10197916, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -6842210, -7500137, -1, -1, -1, -1, -10197916, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -10197916, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -10197916, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -10197916, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -9408400, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246], [-16711936, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -16711936], [-16711936, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -16711936], [-16711936, -16711936, -16711936, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -14011246, -16711936, -16711936, -16711936]];
        //}
        //Two {
        var two = [[-16711936, -16711936, -16711936, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -16711936, -16711936, -16711936], [-16711936, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -16711936], [-16711936, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -16711936], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9342607, -1, -1, -1, -1, -1, -1, -1, -1, -65794, -9342607, -9342607, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -263173, -1, -1, -1, -1, -1, -65794, -1, -1, -9276814, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -9276814, -9276814, -65794, -1, -1, -1, -1, -65794, -1, -1, -1, -7960954, -7960954, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9934744, -1, -1, -1, -1, -65794, -1, -1, -1, -1, -1, -1, -1, -65794, -65794, -9539986, -9342607, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9934744, -1, -65794, -1, -9934744, -9276814, -9276814, -9276814, -9276814, -9539986, -1, -1, -1, -1, -65794, -9539986, -9342607, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -1, -1, -65794, -9276814, -1096669, -1096669, -1096669, -1096669, -9539986, -65794, -65794, -1, -1, -65794, -9539986, -9342607, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9342607, -1, -65794, -65794, -9342607, -1096669, -1096669, -1096669, -1096669, -9539986, -65794, -65794, -1, -1, -65794, -9539986, -9342607, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -9276814, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -9539986, -1, -1, -1, -1, -65794, -9539986, -9342607, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -9276814, -9342607, -1, -1, -65794, -1, -1, -9342607, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9539986, -1, -1, -1, -1, -1, -1, -7960954, -9539986, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9539986, -1, -1, -1, -1, -1, -1, -7960954, -9539986, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9342607, -1, -1, -263173, -263173, -65794, -1, -7960954, -9539986, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -9276814, -9276814, -9276814, -65794, -1, -1, -65794, -9276814, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9539986, -1, -1, -1, -65794, -1, -1, -65794, -8750470, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -9276814, -9342607, -1, -65794, -1, -65794, -1, -1, -65794, -9342607, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -1, -1, -1, -65794, -65794, -1, -1, -1, -1, -1, -1, -1, -1, -1, -65794, -1, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9539986, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -65794, -1, -9539986, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9342607, -1, -1, -1, -65794, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -65794, -1, -9342607, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -9276814, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669], [-16711936, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -16711936], [-16711936, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -16711936], [-16711936, -16711936, -16711936, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -1096669, -16711936, -16711936, -16711936]];
        //}
        //Three {
        var three = [[-16711936, -16711936, -16711936, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16711936, -16711936, -16711936], [-16711936, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16711936], [-16711936, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16711936], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -4539718, -12369085, -12369085, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -9408400, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -9408400, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -9408400, -9341839, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -8947849, -8947849, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -11513776, -11775923, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -8947849, -9539986, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -11183275, -11183275, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -3158065, -4012606, -4012606, -3487030, -9408400, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -9408400, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -9408400, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -9408400, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -9408400, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -9408400, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -2039584, -2171170, -1, -1, -8879752, -15513835, -15513835, -15513835, -1, -1, -1, -1, -1315861, -10657699, -10657699, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -9408400, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147], [-16711936, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16711936], [-16711936, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16711936], [-16711936, -16711936, -16711936, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16561147, -16711936, -16711936, -16711936]];
        //}
        //Magnet {
        var magnet = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711423, -16777216, -12829636, -12829636, -12829636, -12829636, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711423, -16777216, -1, -1, -1, -1, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -1, -1, -2039584, -2039584, -2039584, -2039584, -4408132, -4408132, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -10740707, -1115661, -657931, -1973791, -1973791, -1973791, -1973791, -4276546, -4210753, -15921907, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -117194, -1973793, -2039584, -2039584, -2039584, -2039584, -2039584, -4408132, -4408132, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -117192, -117194, -1835007, -1835007, -1835007, -2039584, -2039584, -2039584, -2039584, -4408132, -4408132, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -9034462, -972500, -972249, -1635060, -1635060, -1635060, -1867140, -1843236, -1973791, -3026479, -11447983, -11579569, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -117194, -1769214, -1835007, -1835007, -1835007, -1835007, -1835007, -2039075, -2039584, -4408132, -16711423, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16777216, -51917, -117194, -1835007, -2031359, -1835007, -1835007, -1835007, -1835007, -1835007, -3866365, -3801087, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16777216, -16777216, -6608853, -713442, -974820, -1635318, -1700853, -1635318, -1635318, -1635573, -1635318, -2945778, -12711410, -13169140, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936], [-16711936, -16777216, -16777216, -117194, -1835007, -1835007, -1835007, -2031359, -1835007, -1835007, -1835007, -1835007, -3801087, -16515072, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936], [-16711936, -16777216, -16777216, -117194, -1835007, -1835007, -1835007, -2031359, -1835007, -1835007, -3473408, -3801087, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -1, -1, -1, -1, -1, -16777216, -16711936, -16711936], [-16777216, -4313555, -4313555, -1370348, -1767159, -1832952, -1832952, -1832952, -1832952, -3143157, -14218997, -14350326, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -4342339, -1710619, -1447447, -1447447, -1447447, -1447447, -7434610, -14803426, -16777216], [-16777216, -117194, -117194, -1835007, -1835007, -1835007, -1835007, -2031359, -1835007, -3801087, -16711680, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -1, -2105377, -2039584, -2039584, -2039584, -2039584, -4408132, -14803426, -16777216], [-16777216, -117194, -117194, -1835007, -1835007, -1835007, -1835007, -3932159, -3801087, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -52171, -117194, -2039584, -2039584, -2039584, -2039584, -2039584, -2039584, -4408132, -14803426, -16777216], [-16185079, -50374, -50374, -1832952, -1702136, -1832952, -1898232, -5829371, -5502457, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -13823980, -52428, -248267, -1982014, -1778470, -1973791, -1973791, -1973791, -1973791, -4276546, -14474461, -16185079], [-16777216, -117194, -117194, -1835007, -1835007, -1835007, -3801087, -16515072, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711423, -16777216, -117194, -1572864, -1835007, -1835007, -1972251, -2039584, -2039584, -2039584, -2039584, -4408132, -14803426, -16777216], [-16777216, -117194, -117194, -1835007, -1835007, -1835007, -3801087, -16515072, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -52173, -117194, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -2039584, -4539718, -4408132, -16777216, -16711936, -16711936], [-15987700, -49346, -49346, -1635318, -1569780, -1635318, -3011571, -12581621, -13169140, -16777216, -16711936, -16711936, -16711936, -16777216, -16777216, -11921896, -576466, -446159, -1635318, -1635318, -1635318, -1635318, -1635318, -1635318, -2446162, -8686219, -8947849, -16777216, -16711936, -16711936], [-16777216, -117194, -117194, -1835007, -1835007, -1835007, -1835007, -3932159, -3801087, -16777216, -16711936, -16711936, -16711936, -16777216, -16777216, -117194, -1834239, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -3801087, -16776956, -16777216, -16711936, -16711936, -16711936], [-16777216, -117194, -117194, -1835007, -1835007, -1835007, -1835007, -2031359, -1835007, -117194, -16711680, -16777216, -16777216, -313544, -117194, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -3931904, -3801087, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936], [-16777216, -9560806, -9560806, -1301732, -1831669, -1635060, -1635060, -1635060, -1635060, -709331, -10084831, -10084322, -10084322, -709077, -709331, -1635060, -1635060, -1635060, -1635060, -1635060, -1635060, -2617846, -10023416, -10351603, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16777216, -16777216, -117194, -1835007, -1835007, -1835007, -2031359, -1835007, -1835007, -52427, -117194, -117194, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -3801087, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16777216, -16777216, -117194, -1835007, -1835007, -1835007, -2031359, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -3932159, -3801087, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16777216, -16777216, -10740707, -3076847, -3076598, -2880500, -1765364, -1569268, -1569268, -1700853, -1569268, -1569268, -1700854, -1569268, -1569268, -1635060, -1569268, -2880500, -12776694, -11989748, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16777216, -3801088, -3801087, -3801087, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -1835007, -3801087, -16776957, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -3801087, -3801087, -3801087, -3735294, -3801087, -3801087, -3735294, -3801087, -3801087, -16776703, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16776703, -16777216, -16777216, -13235954, -13628404, -13628404, -13563381, -13628404, -13628404, -13694195, -13628404, -13628404, -16776703, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16711423, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}
        //Time {
        var time = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16316665, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777214, -15987698, -10592926, -10592926, -10395547, -10527133, -10592926, -10592926, -10592926, -10592926, -10592926, -10592926, -16777216, -16777214, -15987698, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777214, -15987698, -6908517, -6908517, -6908517, -7105896, -6908517, -6908517, -6908515, -6908515, -6908517, -6908517, -16777214, -16777214, -16316665, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16053745, -8487550, -6908518, -6447967, -16448251, -16448251, -16448251, -16448251, -16448251, -16448503, -16448503, -16448503, -16448503, -16448503, -7698034, -6974311, -7566448, -16777212, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16514044, -15527401, -7105897, -16777212, -16711675, -12171958, -1579033, -1250068, -1250068, -1250068, -1250068, -1579285, -1250320, -1250320, -1250320, -1250320, -15922159, -16580089, -16251124, -7237483, -16382710, -16448251, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -15593194, -12895681, -7434862, -13882063, -13420742, -15526118, -1381654, -1118482, -1052689, -1250068, -2960686, -1446416, -1841174, -1644824, -921103, -1118482, -14474461, -15066598, -14935012, -6776680, -13421773, -14277334, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -15658987, -6382174, -7040104, -16316917, -1710358, -1709588, -1709588, -1710619, -1, -460552, -1, -16711423, -7236200, -1249037, -1710617, -328966, -1, -1, -1, -526345, -16119286, -6118750, -6974311, -16514296, -16711936, -16711936, -16711936], [-16711936, -16777216, -16777216, -7369069, -16711675, -15066850, -1776151, -2302495, -1578772, -1381393, -1, -1, -1, -394759, -131587, -327937, -65537, -263173, -1, -1, -1, -1, -131587, -1, -14935012, -16777212, -6842725, -16514044, -16514044, -16711936], [-16711936, -16777216, -16711423, -6974311, -16777212, -15460325, -1709588, -1709590, -131587, -1, -65794, -1, -1, -1, -65794, -1, -1, -1, -1, -65794, -1, -1, -65794, -65794, -16119286, -16711423, -6776931, -16777216, -16777216, -16711936], [-16711936, -16777216, -16316665, -7303276, -16777212, -15920876, -1643795, -1512211, -1, -1, -1, -1, -131587, -1, -1, -1, -1, -1, -1, -1, -65794, -65794, -1, -1, -15461356, -16777216, -6645345, -16777216, -16777216, -16711936], [-16777216, -10658719, -7040103, -16514044, -1447447, -1709588, -1841174, -262145, -1, -1, -1, -1, -1, -1, -65794, -1, -1, -1, -1, -592138, -394759, -65794, -65794, -65794, -1, -328966, -16777216, -6974308, -10658465, -16645632], [-16777216, -10263961, -6974310, -16579837, -1381654, -788486, -1775381, -393730, -1, -65794, -65794, -1, -1, -1, -1, -65794, -1, -1118482, -1, -14803426, -1, -1, -131587, -131587, -263173, -328966, -16777216, -7040101, -10658465, -16645632], [-16777216, -10658719, -7040103, -16579837, -1381654, -2500133, -16776960, -16777216, -394759, -1, -263173, -1, -1, -1, -1, -1, -65794, -1, -16777216, -1381654, -131587, -1, -197378, -1644824, -257, -394759, -16777216, -6974308, -10658465, -16645632], [-16514044, -10658719, -7040103, -16579837, -1381654, -3421237, -16579837, -16579837, -1, -263173, -131587, -1, -1, -1, -1, -1, -1, -1, -16777216, -1776412, -131587, -1, -257, -2237215, -257, -394759, -16777216, -6974308, -10658465, -16645632], [-16777216, -10658719, -7040103, -16579837, -1381654, -1579033, -1579033, -1579033, -16645630, -16777216, -16645630, -1, -1, -1, -131587, -131587, -16777216, -16777216, -1579033, -1, -1, -1, -257, -7105897, -592390, -328966, -16777216, -7040101, -10658465, -16645632], [-16777216, -10658719, -7040103, -16514044, -1447447, -4079419, -16711675, -526343, -2236963, -1381654, -1447447, -16579837, -16185079, -16250872, -65794, -15921907, -1579033, -1513240, -131587, -328966, -1, -1, -263173, -16316665, -2171170, -328966, -16777216, -6974308, -10658465, -16645632], [-16777216, -10658719, -7040103, -16579837, -1644826, -1513492, -7105897, -1, -1, -1, -921103, -1447447, -2631721, -1973791, -16645630, -16645630, -1381654, -1513240, -65794, -1, -65794, -65794, -1, -1, -394759, -328966, -16777216, -6974308, -10592672, -16185081], [-16777216, -10658719, -7040103, -16514044, -1447447, -1578772, -6841442, -460293, -1, -1, -1, -1579033, -921103, -1579033, -16711423, -16579061, -596768, -1845816, -263171, -1292, -1, -1, -65794, -65794, -1, -328966, -16645630, -6974308, -10658465, -16645632], [-16777216, -10658719, -7040103, -16514044, -1447447, -1249037, -2433311, -327937, -1, -1, -394759, -1, -1, -526345, -1776412, -1513491, -5037277, -1240787, -4615, -67075, -1, -1, -65794, -65794, -1, -328966, -16645630, -6974308, -10658465, -16645632], [-16777216, -10658719, -7040103, -16579837, -1381654, -1709588, -1446416, -1841176, -1, -197380, -1, -1, -65794, -65794, -197380, -591361, -990495, -4369, -2807764, -1048584, -65794, -1, -1, -1, -65794, -526345, -13619152, -6776929, -10658465, -16645632], [-16711936, -16777216, -16777216, -7566448, -16777212, -15723497, -1709588, -1709590, -65794, -1, -1, -1, -1, -1, -1, -1, -394759, -855308, -8483, -4711622, -11053, -1800, -1, -1, -16579837, -16777216, -6711138, -16514044, -16514044, -16711936], [-16711936, -16711423, -16711423, -7040104, -16777212, -15460325, -1709588, -1709590, -1, -65794, -1, -1, -1, -1, -1, -65794, -1, -852748, -794394, -3074008, -6683, -4117, -1, -65794, -16316665, -16777216, -6776931, -16777216, -16777216, -16711936], [-16711936, -16711423, -16711423, -7303276, -16382710, -15132643, -2566180, -1118221, -1709588, -1841174, -263173, -65794, -131587, -460552, -263173, -66049, -257, -131585, -1, -1513240, -5823961, -2347724, -460552, -1, -15132391, -16777212, -6842725, -16777216, -16777216, -16711936], [-16711936, -16711936, -16711936, -16777212, -6908518, -7763827, -16777212, -986635, -1709588, -1972760, -1710619, -65794, -1, -328966, -16777216, -7105897, -197633, -1842203, -65794, -1, -196869, -264715, -1, -16185079, -6645094, -6711139, -16777212, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16514296, -14145748, -7434862, -14211028, -15789290, -15920876, -1447447, -1579033, -263173, -1, -1973791, -329218, -257, -197378, -1, -1, -15198443, -16316413, -14869219, -7895161, -14408668, -16645882, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16645882, -6645346, -16777212, -16777212, -16119538, -1315861, -1184275, -1, -1, -1, -1, -1, -1, -1, -131587, -16777216, -16777216, -16053745, -6776932, -16448503, -16316665, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777212, -6579553, -6711139, -6711139, -16645632, -16645632, -16645632, -16645632, -16185081, -16777216, -16645632, -16645632, -16645632, -16645632, -6908517, -6711138, -6776932, -16777212, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16645630, -6974308, -6974308, -6974308, -6974308, -6974308, -6842722, -6776929, -6974308, -6974308, -6974308, -16777216, -16777216, -16645630, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16645630, -10526879, -10526879, -10526879, -10526879, -10592672, -10329500, -10526879, -10526879, -10526879, -10526879, -16777216, -16777216, -16645630, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16645632, -16645632, -16645632, -16645632, -16185081, -16777216, -16645632, -16645632, -16645632, -16645632, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}
        //Shield {
        var shield = [[-16711936, -16711936, -16711936, -13947339, -13354175, -13091003, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -12697272, -13552068, -14209998, -16711936, -16711936, -16711936], [-16711936, -13158074, -13485759, -3090457, -2366229, -2300689, -10721938, -13090999, -13289661, -14144970, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -13749960, -13289661, -13287615, -9866884, -3090457, -1905931, -4866361, -13419453, -13486529, -16711936], [-12631228, -2761753, -2563097, -4866868, -4867117, -4801072, -4867117, -3090708, -2432533, -1577224, -13223355, -13289150, -13289148, -13289147, -13289148, -13289148, -13289147, -13552319, -13552320, -13552319, -2366742, -2432788, -3353880, -5196082, -5064498, -4867117, -4801575, -5326385, -7630425, -13289150], [-14012356, -4603943, -4997939, -13617848, -13485248, -13551041, -7036752, -5260592, -4998190, -4998444, -5130299, -2498581, -2498326, -2498328, -2498328, -2498328, -2827293, -4735022, -4734767, -4735022, -5130030, -4998441, -4473386, -5789250, -12827308, -13419968, -13748420, -5326387, -7695705, -13419968], [-13682373, -5130289, -13353913, -928590, -995167, -995957, -9805227, -13879242, -14206402, -14140866, -13813949, -4932397, -4867117, -4867115, -4867115, -4867369, -4867369, -4737069, -4933169, -13288380, -14140866, -14206402, -14206653, -8952487, -143209, -602719, -2044286, -13814973, -7826773, -13289150], [-13682373, -5130289, -13551292, -1189978, -3169949, -4295878, -10406606, -3229286, -273756, -273754, -1256021, -13814456, -13748418, -13748416, -13748416, -13748669, -13748669, -13748669, -13813949, -1256033, -273754, -273756, -2702689, -9741243, -929388, -1660306, -4161472, -13682886, -10129274, -13354941], [-13682373, -5130289, -13551292, -601448, -2252446, -4688578, -11188949, -3950204, -536433, -2513307, -1922714, -4687275, -13949148, -1126246, -995181, -1126246, -799597, -13225434, -1452640, -863344, -3037850, -5410758, -6261679, -9872827, -798051, -2380957, -3575225, -13683136, -9800311, -13223103], [-13682373, -5130289, -13551292, -601448, -2252446, -4688578, -11188949, -3950204, -11115, -2382748, -2775958, -4884915, -13423303, -274267, -2447764, -2841751, -3965874, -13160931, -993639, -2512797, -2316956, -4951237, -6853816, -9543862, -732258, -2380957, -3575225, -13683136, -9800311, -13223103], [-13682373, -5130289, -13551292, -601448, -2252446, -4688578, -11188949, -3950202, -11113, -2251933, -2514077, -5146547, -12965072, -470116, -2185120, -1533582, -4752819, -13684191, -797287, -2513824, -2382238, -4885442, -6854331, -9614277, -2053784, -2380957, -3575225, -13683136, -9800311, -13223103], [-13682373, -5130289, -13551292, -601448, -2252446, -4688578, -11188949, -3950202, -11113, -2251933, -2514077, -5146547, -12965072, -470116, -2185120, -1533582, -4752819, -13684191, -797287, -2513824, -2382238, -4885442, -6854331, -9614277, -2053784, -2380957, -3575225, -13683136, -9800311, -13223103], [-13682627, -5130289, -13551039, -206181, -2910376, -4820164, -11188949, -3950202, -11113, -2251933, -2514073, -5146549, -12965072, -470116, -2185120, -1533582, -4752819, -13355992, -1060200, -2644383, -2382238, -4885442, -6854331, -9614277, -2053784, -2380957, -3706041, -13485757, -9537139, -13223103], [-13682625, -5130289, -13551039, -2645145, -1005207, -4820164, -11188949, -3950202, -11113, -2251933, -2514073, -5146549, -12965072, -470116, -2185120, -1533582, -4752819, -13948903, -2840481, -2053536, -2382238, -4885442, -6854331, -9614277, -2053784, -2446493, -3706041, -13354173, -10918794, -13223105], [-13682625, -5130289, -13551039, -2513822, -1924518, -4820164, -11188949, -3950202, -11113, -2251933, -2514073, -5146549, -12965072, -470116, -2185120, -1533582, -4752819, -14078939, -2644131, -2840473, -2382238, -4885442, -6854331, -9614277, -2053784, -2446493, -3706041, -13354173, -10918794, -13354691], [-13486527, -5065009, -7301199, -13684683, -4425906, -4099778, -10993357, -5272214, -2317209, -2317209, -2514073, -5212342, -12962760, -2841247, -2055076, -1533083, -4752571, -14013410, -2643882, -2382236, -2382238, -4885442, -6658232, -9679819, -2250905, -4749473, -13419715, -10919309, -10788998, -13289409], [-16711936, -12828605, -4999467, -13357512, -3705004, -3902399, -10861771, -4943762, -2185886, -2382238, -2514073, -5212342, -13750479, -1988507, -2251429, -1533083, -4752571, -14013410, -2643882, -2382236, -2382238, -4885442, -6658232, -9679819, -2250905, -4427439, -13158852, -10657414, -12631477, -16711936], [-16711936, -13552070, -5326637, -13617596, -3508401, -3836865, -10665677, -4812693, -2186140, -2186140, -2514077, -5212087, -13750730, -1923729, -1924761, -1533582, -4752819, -14013156, -2643882, -2382236, -2382238, -4885442, -6656437, -10471126, -4492218, -4688318, -13224633, -10985614, -13223103, -16711936], [-16711936, -13354691, -7695185, -14012354, -3508401, -3836865, -10665677, -4812693, -2186140, -2186140, -2514077, -5212087, -13750730, -1923729, -1924761, -1533582, -4752819, -14013156, -2643882, -2382236, -2382238, -4885442, -6656437, -10273747, -4558011, -4358061, -13420987, -10985614, -13223103, -16711936], [-16711936, -13289156, -7564117, -14142138, -5867426, -3902909, -10600143, -4616343, -2055316, -2645396, -2642310, -5081519, -13881293, -1989265, -2186904, -1598112, -4883132, -13947365, -2513305, -2446239, -2252694, -4162481, -6591406, -10208206, -4425657, -9876669, -14142651, -11181711, -13419201, -16711936], [-16711936, -13289411, -7432783, -7367502, -13878713, -4488871, -11058374, -4616856, -1856658, -3967940, -4361145, -5212592, -13685196, -1923981, -1661840, -875919, -4621243, -13291992, -2576293, -4951747, -4424893, -4753082, -6722224, -10076618, -4097458, -13092800, -11445388, -10459270, -13420736, -16711936], [-16711936, -16711936, -13288382, -7433553, -13616830, -9287604, -12765650, -6526896, -5671084, -5456180, -7104338, -5147060, -13227225, -1859225, -4163251, -4099002, -4818087, -12572132, -5344180, -4603432, -7103553, -6195862, -6460851, -12635858, -9158855, -13748933, -10788235, -13552322, -16711936, -16711936], [-16711936, -16711936, -13157564, -7499088, -13617083, -9287353, -12438485, -6788775, -4159903, -9799023, -11380113, -4426946, -13620440, -3968200, -4688817, -4687798, -4490421, -13619411, -4624065, -10128245, -11312249, -6062221, -6722733, -12766676, -9551303, -13879491, -10722956, -13552068, -16711936, -16711936], [-16711936, -16711936, -13157564, -7499088, -7762011, -14142138, -13946059, -7180201, -3182534, -3969205, -4295863, -5539496, -12833245, -4099511, -5324318, -8548429, -4359603, -13226714, -5475249, -4426938, -4229046, -4819386, -6722996, -13880515, -13747381, -10787725, -10722956, -13420482, -16711936, -16711936], [-16711936, -16711936, -16711936, -13881035, -9143410, -13814973, -14339793, -7378857, -4229305, -4295098, -4425404, -4950457, -13095130, -4426171, -9273692, -11179895, -4621486, -12834012, -4427714, -4098749, -4032956, -4229559, -6657452, -13161162, -13092533, -10919309, -14275277, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -13617864, -10064512, -9668725, -12628897, -6983584, -4163512, -4163512, -4163504, -9419707, -13356506, -3510715, -4034749, -3705018, -4752040, -12834012, -4427714, -3967163, -9093590, -9288121, -10272710, -12303531, -10658443, -10853516, -13814726, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -13552332, -9341043, -9537137, -12628383, -12437449, -9223621, -9878981, -9027267, -12899281, -3968194, -5149119, -3965102, -9485512, -13292759, -10009536, -10075070, -9026752, -12044229, -12760485, -10787976, -10656903, -13882316, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -13552068, -10064772, -9932147, -9339501, -13813435, -13881036, -9156537, -13620969, -3966135, -9092024, -9027269, -9617090, -12899281, -9156285, -13095367, -13616834, -11181200, -10721930, -11117464, -13420995, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -8354421, -10393737, -9209204, -9670004, -9209457, -13551039, -12504256, -9024959, -9418943, -9091520, -9486015, -13026754, -13419704, -10722442, -10591110, -10985615, -11710628, -8881280, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -9276036, -13420736, -12960434, -9406832, -9538169, -9668212, -13617343, -13353913, -12895678, -12632500, -10656903, -11051661, -10920075, -13289148, -13420482, -8421757, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -13485757, -13880257, -9407610, -10985868, -10722955, -10526606, -10790545, -10986897, -13485497, -13485759, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -13748931, -13485757, -13485246, -13485246, -13419964, -13485761, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}
        //Scope {
        var scope = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536], [-65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536], [-65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536], [-65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536, -65536], [-65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536], [-65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -65536, -65536, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -65536, -65536, -65536, -65536, -65536, -65536, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}
        //Portal {
        var portal = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -8553508, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -5267491, -5137424, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -5137161, -16711936, -16711936, -16711936, -5659194, -8551497, -8224001, -8289025, -16711936, -16711936, -16711936, -16711936, -4214820, -5530678, -16711936, -5463337, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -8223276, -16711936, -5465622, -16711936, -9010733, -16711936, -10736673, -7633154, -9951007, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -11590788, -4021523, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -7761473, -16711936, -5069599, -1452289, -16711936, -8679227, -10665812, -8564505, -11653415, -8568065, -10676009, -11067181, -10016785, -10083332, -7778819, -8689204, -16711936, -8483922, -16711936, -16711936, -16711936, -16711936, -5197350, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -4284673, -1452289, -16711936, -7762952, -10212626, -8171022, -8369665, -8695337, -12970374, -12905058, -13691278, -13628043, -13824394, -10673727, -11131968, -14022803, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -9534223, -5523754, -16711936, -3158055, -3489049, -6380095, -5408513, -8501505, -8434950, -11591482, -12708457, -13496969, -13430427, -11391835, -10214941, -11265579, -8236801, -7771941, -6915880, -5995779, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -8617473, -16711936, -1910529, -16711936, -16711936, -4348449, -7650049, -8303873, -8369921, -13496720, -11590983, -13497221, -11592770, -11920006, -11198279, -9426696, -8239873, -8566328, -8632586, -8761345, -16711936, -8223258, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -2370561, -5990664, -8884511, -7975185, -7909390, -8566017, -12445287, -12773747, -13825685, -12707954, -11986769, -11527229, -11658316, -11986768, -9557514, -10082831, -7250435, -8497420, -4743431, -5990425, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -8486147, -16711936, -16711936, -13622916, -8092420, -9156114, -8369921, -8630529, -13037424, -8564755, -13233550, -13299341, -12510577, -12315231, -12249450, -12576871, -12642656, -10016276, -9754634, -8239111, -7511809, -4480533, -5463571, -8027154, -16711936, -7698715, -16711936, -16711936], [-16711936, -16711936, -9598987, -16711936, -4682241, -8942863, -4350209, -5008129, -7711233, -9156902, -8894472, -13167504, -13102211, -13234047, -12905586, -12708710, -12708459, -12709221, -11723343, -11199285, -10083860, -9360897, -8700417, -5074945, -4349185, -5004801, -16711936, -1779209, -1844738, -16711936], [-16711936, -9403692, -4546561, -16711936, -4809729, -4480257, -4938499, -8303105, -8304385, -12773496, -8368385, -13826439, -12642163, -13233797, -12905337, -13037173, -12774503, -12708465, -11527219, -11199032, -11396146, -9754634, -10083329, -6920969, -4483585, -4478727, -4283649, -1187329, -16711936, -16711936], [-16711936, -8420353, -5922572, -16711936, -12376695, -4811009, -4677633, -8172033, -8763143, -12840302, -12840306, -12971128, -13693573, -13298561, -13430147, -12839542, -12774513, -12839793, -12577134, -11395391, -11330103, -11199283, -9819406, -9755394, -7053057, -4808961, -4545025, -1844998, -16711936, -16711936], [-16711936, -8880897, -8549654, -16711936, -5203201, -4876033, -5006852, -8566018, -12643679, -12642672, -13562000, -13560979, -14743975, -13888155, -14020252, -13955991, -13167496, -13168007, -12642927, -11460933, -11329852, -11199285, -9885198, -10215937, -6915585, -5266441, -1123841, -1713412, -16711936, -16711936], [-16711936, -3031041, -4873762, -16711936, -4811521, -8040716, -8304129, -8567041, -12643177, -12642423, -13560728, -14546346, -14413996, -14610864, -14283164, -14020754, -14087315, -13299842, -12840302, -12512872, -11330103, -11199034, -10805297, -9557012, -6921729, -4677633, -4676865, -1055489, -16711936, -16711936], [-16711936, -5201925, -3161857, -16711936, -8224541, -8632578, -8695303, -8631810, -8104465, -12709223, -13627279, -14283940, -14480043, -14480042, -14348706, -13823642, -13758358, -13429385, -13364356, -12708459, -11526730, -11132469, -11395912, -10017537, -7316225, -4742415, -4809729, -16711936, -16711936, -16711936], [-16711936, -16711936, -2962703, -16711936, -5792001, -8305666, -8368138, -8631559, -12249173, -12445544, -13627279, -14283940, -14480043, -14480042, -14414499, -14021021, -13955991, -13823894, -13429896, -12642664, -11068974, -11133751, -11330125, -10211846, -6986753, -1517569, -4940546, -16711936, -16711936, -16711936], [-16711936, -16711936, -1645576, -4478467, -6909953, -8435209, -8565515, -8238849, -8369155, -12775266, -13627279, -14283940, -14480043, -14480042, -14085793, -14480805, -14086296, -14021273, -13232517, -12774250, -12051543, -11394867, -11395912, -10146817, -8304643, -7709196, -2704385, -1449985, -16711936, -5334017], [-16711936, -16711936, -2106127, -663553, -5265412, -8566292, -8433418, -8173057, -8369155, -12775266, -13627279, -14283940, -14480043, -14480042, -14414507, -14480555, -14086045, -13429637, -13364354, -12642666, -11068721, -11068220, -11200305, -12709534, -9685813, -7381249, -16711936, -1975309, -5398799, -16711936], [-16711936, -16711936, -16711936, -4142081, -6912030, -7511817, -8435969, -8304129, -8369921, -12644455, -13693072, -14218147, -14480043, -14480042, -14414762, -14480551, -14086547, -13233540, -13168254, -12577132, -11133754, -11134001, -11002168, -10739999, -7315723, -4481025, -16711936, -16711936, -5596180, -16711936], [-7961089, -5004039, -5598209, -8748033, -16711936, -4480771, -8827905, -8304129, -8106242, -12447330, -13824658, -13691803, -14348457, -14414249, -14414507, -14217631, -14020252, -13233540, -13168256, -11525448, -11134003, -11133502, -9819148, -6988801, -7511313, -4612097, -16711936, -4411655, -16711936, -16711936], [-16711936, -16711936, -4937987, -8027137, -16711936, -12181110, -7973904, -8303873, -8369921, -11067181, -13561486, -14283940, -14480043, -14545835, -14415263, -13363076, -14020503, -13233285, -13168258, -11525948, -11134506, -11132997, -9819905, -6988040, -7707914, -4547585, -16711936, -16711936, -16711936, -16711936], [-16711936, -7962386, -16711936, -16711936, -12381303, -16711936, -8107265, -8499721, -8303361, -8435459, -11067446, -13758602, -14480042, -13757849, -13430149, -13364859, -13101687, -12774262, -11394881, -11264825, -11003457, -9822210, -9757185, -7049515, -1254657, -8618760, -16711936, -5202450, -16711936, -16711936], [-16711936, -16711936, -5726977, -4613634, -8944647, -8092673, -6054150, -4612865, -8499213, -8304129, -7779329, -14089348, -13889936, -12839031, -12642163, -12774001, -12642913, -12445796, -11526716, -11199031, -11068212, -9819406, -16711936, -8823572, -1516803, -1122305, -4940545, -16711936, -16711936, -16711936], [-16711936, -16711936, -8551706, -16711936, -4677889, -13626766, -8879889, -8682261, -8565505, -8042241, -11067197, -11199285, -11396916, -11330869, -11459654, -12710248, -11329614, -11134011, -11133247, -10935880, -10019095, -7840026, -7314689, -9013292, -5661209, -4809217, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -8618810, -9076993, -1774337, -14151576, -9075227, -8418311, -14023036, -7711754, -7581185, -11001401, -11593291, -11001154, -11133754, -11133239, -11001134, -10870069, -12444772, -9953537, -10150145, -16711936, -16711936, -2171649, -4806427, -5530911, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -4939020, -16711936, -8484615, -16711936, -1449729, -1777162, -16711936, -4548110, -8370433, -8830722, -7910401, -11661374, -10934593, -11661889, -11392058, -7251464, -11067408, -8291602, -4809473, -1188353, -4875268, -5269521, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -5662992, -4612353, -8814850, -7961622, -8486163, -5793793, -16711936, -4874241, -16711936, -12905094, -8762132, -8496650, -11004962, -13033323, -4287490, -8681761, -8353823, -4874241, -4872981, -14283387, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -4544769, -5006081, -16711936, -4349953, -16711936, -4680199, -16711936, -2500107, -4413713, -7710465, -4417537, -4610582, -8619265, -8615438, -8224001, -16711936, -4743937, -4741898, -4611585, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -7962386, -5529094, -16711936, -16711936, -8030721, -16711936, -8353071, -8550148, -5071115, -5398537, -5203201, -4150278, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -5401089, -6185247, -6056193, -16711936, -16711936, -5398537, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}
        //Temp {
        var temp = [[-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216], [-16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16729131, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16673401, -16673401, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16663596, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936], [-16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16777216, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936, -16711936]];
        //}

        noStroke();
        background(255, 255, 255, 0);
        function loadSprite(sprite, offsetX, offsetY, s) {
            for(var i = 0; i < sprite.length; i++) {
                for(var j = 0; j < sprite[0].length; j++) {
                    if(sprite[j][i] !== color(0, 255, 0)) {
                        fill(sprite[j][i]);
                        rect(i*s + offsetX, j*s + offsetY, s, s);
                    }
                }
            }
            return get(offsetX, offsetY,  sprite.length * s,  sprite[0].length * s);
        }

        var images = [];
        //Loading Sprites {
        pushMatrix();
        images.push(loadSprite(black_hole, 0, 0, 5));
        images.push(loadSprite(nuke, 30*5, 0, 5));
        images.push(loadSprite(invincible, 30*5*2, 0, 5));
        images.push(loadSprite(spam, 0, 30*5, 5));
        images.push(loadSprite(mine, 30*5, 30*5, 5));
        images.push(loadSprite(temp, 30*5*2, 30*5, 5));
        images.push(loadSprite(one, 30*5*3, 30*5, 5));
        images.push(loadSprite(two, 0, 30*5*2, 5));
        images.push(loadSprite(magnet, 30*5, 30*5*2, 5));
        images.push(loadSprite(time, 30*5*2, 30*5*2, 5));
        images.push(loadSprite(shield, 30*5*3, 30*5*2, 5));
        images.push(loadSprite(scope, 0, 30*5*3, 5));
        images.push(loadSprite(portal, 30*5, 30*5*3, 5));
        images.push(loadSprite(three, 30*5*2, 30*5*3, 5));
        images.push(loadSprite(explosion, 30*5*3, 0, 5));
        popMatrix();
        //}

        function pointCircle(x1, y1, cx, cy, y, r){
            return (((pow((x1-cx), 2))/(pow(2*r, 2))) + ((pow((y1-cy), 2))/(pow(2*r, 2)))) <= 1;
        }
        function linePoint(x1, y1, x2, y2, px, py) {
        var d1 = dist(px,py, x1,y1);
        var d2 = dist(px,py, x2,y2);
        
        var lineLen = dist(x1,y1, x2,y2);
        var buffer = 0.1;
        
        if (d1+d2 >= lineLen-buffer && d1+d2 <= lineLen+buffer) {
            return true;
        }
        return false;
        }
        function circleCircle(x1, y1, x2, y2, r1, r2) {
            return dist(x1, y1, x2, y2) <= (r1 + r2);
        }
        function inBox(x, y, w, h) {
            if(mouseX >= x && mouseX <= x+w && mouseY >= y && mouseY <= y+h) {
                return true;
            }
            return false;
        }

        var scene = "title";
        function Line(x1, y1, x2, y2) {
            this.x1 = x1;
            this.y1 = y1;
            
            this.x2 = x2;
            this.y2 = y2;

            this.display = function() {
                line(this.x1, this.y1, this.x2, this.y2);
            };
        }

        function Power() {
            this.pos = new PVector(0, 0);
            this.vel = new PVector(0, 0);
            this.angle = 0;
            this.r = 25;
            
            this.alive = true;
            
            var angle = random(2*PI);
            var distance = width;
            this.pos.set(distance * cos(angle) + width/2, distance * sin(angle) + height/2);
            this.initialPos = this.pos.get();
            this.vel.set(-random(1, 3)*sin(angle + PI/2), random(1, 3)*cos(angle + PI/2));
            
            this.type = "";
            
            var randomValue = random(1);
            var secondValue = random(1);
            
            this.deathTime = 0;
            this.time = 0;
            
            this.index = 5;
            
            this.angularVelocity = 0;
            this.deathTime = 5;
            
            this.maxSize = 0;
            this.goesOver = false;
            
            if(randomValue > 0.4) {
                if(secondValue >= 4/5) {
                    this.type = "pulse";
                } else if(secondValue >= 3/5) {
                    this.type = "two";
                    this.index = 7;
                } else if(secondValue >= 2/5) {
                    this.index = 6;
                    this.type = "one-shot";
                } else if(secondValue >= 1/5) {
                    this.type = "shield";
                    this.index = 10;
                } else {
                    this.type = "mine";
                    this.index = 4;
                }
            } else if(randomValue > 0.1) {
                if(secondValue >= 4/5) {
                    this.type = "teleport";
                    this.index = 12;
                } else if(secondValue >= 3/5) {
                    this.r = 30;
                    this.type = "lazer";
                    this.index = 3;
                } else if(secondValue >= 2/5) {
                    this.r = 20;
                    this.type = "spam";
                    this.index = 3;
                } else if(secondValue >= 1/5) {
                    this.type = "magnet";
                    this.index = 8;
                    this.deathTime = 8;
                } else {
                    this.type = "spray";
                    this.index = 13;
                }
            } else {
                if(secondValue >= 4/5) {
                    this.type = "homing";
                    this.index = 11;
                } else if(secondValue >= 3/5) {
                    this.type = "nuke";
                    this.maxSize = 30*10;
                    this.index = 1;
                } else if(secondValue >= 2/5) {
                    this.type = "hole";
                    this.maxSize = 30*4;
                    this.index = 0;
                } else if(secondValue >= 1/5) {
                    this.type = "invincible";
                    this.index = 2;
                    this.deathTime = 7;
                }  else {
                    this.type = "time";
                    this.index = 9;
                }
            }

            this.deathTime *= 60;
            
            this.update = function() {
                this.angularVelocity = radians(30*sqrt(this.vel.x*this.vel.x + this.vel.y*this.vel.y)/this.r);
                this.pos.add(this.vel);
                this.angle += this.angularVelocity;
            };
            
            this.display = function() {
                pushMatrix();
                translate(this.pos.x, this.pos.y);
                rotate(this.angle);
                imageMode(CENTER);
                scale(2*this.r/(30*5));
                image(images[this.index], 0, 0); 
                popMatrix();
            };
            
            this.collides = function(player) {
                for(var i = 0; i < player.lines.length; i++) {
                    var line = Object.assign({}, player.lines[i]);
                    line.x1 += player.pos.x;
                    line.x2 += player.pos.x;
                    line.y1 += player.pos.y;
                    line.y2 += player.pos.y;
                    
                    var inside1 = pointCircle(line.x1, line.y1, this.pos.x, this.pos.y, this.r);
                    var inside2 = pointCircle(line.x2, line.y2, this.pos.x, this.pos.y, this.r);
                    if (inside1 || inside2) { 
                        return true;
                    }
                    
                    var distX = line.x1 - line.x2;
                    var distY = line.y1 - line.y2;
                    var len = sqrt( (distX*distX) + (distY*distY) );
                    
                    var dot = ( ((this.pos.x-line.x1)*(line.x2-line.x1)) + ((this.pos.y-line.y1)*(line.y2-line.y1)) ) / pow(len,2);
                    
                    var closestX = line.x1 + (dot * (line.x2-line.x1));
                    var closestY = line.y1 + (dot * (line.y2-line.y1));
                    
                    var onSegment = linePoint(line.x1, line.y1, line.x2, line.y2, closestX,closestY);
                    if (!onSegment) {
                        continue;
                    }
                    
                    distX = closestX - this.pos.x;
                    distY = closestY - this.pos.y;
                    var distance = sqrt( (distX*distX) + (distY*distY) );
                    
                    if (distance <= this.r) {
                        return true;
                    }
                }
                return false;
            };  
            
            this.deathAnimation = function() {
                noFill();
                
                this.time ++;
                pushMatrix();
                translate(this.pos.x , this.pos.y);
                rotate(radians(this.angle));
                
                    if(this.type === "hole") {
                        this.angle ++;
                        if(this.time < (5*60 - 25)) {
                            if(this.r < this.maxSize) {
                                this.r += (this.maxSize-this.r)/5;
                            }
                        }
                        if(this.time > 5*60 - 15 && this.r > 0) {
                            this.r -= 3*this.r/15;
                        }
                        if(this.r > 0) {
                            scale(2*this.r/(30*5));
                            image(images[this.index], 0, 0);
                        }
                    } else if(this.type === "nuke") {
                        var t = this.deathTime;
                        var a = this.maxSize/sq(t);
                        this.r = a*(2*this.time*t-sq(this.time)-sq(t)) +this.maxSize;
                        if(this.time > 60*2.5) {
                            tint(255, 255, 255, map(this.time, 60*2.5, 60*5, 255, 0) + 50);
                        }
                        
                        scale(2*this.r/(30*5));
                        image(images[images.length - 1], 0, 0);
                        
                        noTint();
                    } else if(this.type === "time") {
                        if(this.r < 1.5*width && !this.goesOver) { 
                            this.r += 75;
                        } else if(this.r > 0 && this.time > 4.5*60) {
                            this.r -= 150;
                            this.goesOver = true;
                        }
                        stroke(255);
                        fill(255, 255, 255, 100);
                        pushMatrix();
                        ellipse(0, 0, 2*this.r, 2*this.r);
                        popMatrix();
                        noStroke();
                    } else {
                        if(this.r > 0) {
                            this.r -= 0.5;
                            this.angle += 10;
                            scale(2*this.r/(30*5));
                            image(images[this.index], 0, 0);
                        }
                    }
                popMatrix();
                
                if(this.time < 255 && this.type === "nuke") {
                    fill(255, 255 - this.time);
                    rect(-1, -1, width+1, height+1);
                }
            };
            
        }

        function Bullet(x, y, r, angle, vel) {
            this.pos = new PVector(x, y);
            var angles = new PVector(6*cos(angle + PI/2), 6*sin(angle + PI/2));
            
            this.vel = new PVector(0, 0);
            if(vel) {
                this.vel = PVector.add(angles, vel);
            } 
            
            this.kill = false;
            this.r = r;
            
            this.update = function() {
                this.pos.add(this.vel);

                if(this.pos.x > width || this.pos.x < 0 || this.pos.y > height || this.pos.y < 0) {
                    this.kill = true;
                }
            };
            
            this.collides = function(asteroid) {
                var d = dist(this.pos.x, this.pos.y, asteroid.pos.x, asteroid.pos.y);
                if(d > (3/2*asteroid.s + this.r)) {
                    return false;
                }
                if(d <= asteroid.s/2) {
                    return true;
                }
                for(var i = 0; i < asteroid.lines.length; i++) {
                    var line = Object.assign({}, asteroid.lines[i]);
                    line.x1 += asteroid.pos.x;
                    line.x2 += asteroid.pos.x;
                    line.y1 += asteroid.pos.y;
                    line.y2 += asteroid.pos.y;
                    
                    var inside1 = pointCircle(line.x1, line.y1, this.pos.x, this.pos.y, this.r);
                    var inside2 = pointCircle(line.x2, line.y2, this.pos.x, this.pos.y, this.r);
                    if (inside1 || inside2) { 
                        return true;
                    }
                    
                    var distX = line.x1 - line.x2;
                    var distY = line.y1 - line.y2;
                    var len = sqrt( (distX*distX) + (distY*distY) );
                    
                    var dot = ( ((this.pos.x-line.x1)*(line.x2-line.x1)) + ((this.pos.y-line.y1)*(line.y2-line.y1)) ) / pow(len,2);
                    
                    var closestX = line.x1 + (dot * (line.x2-line.x1));
                    var closestY = line.y1 + (dot * (line.y2-line.y1));
                    
                    var onSegment = linePoint(line.x1, line.y1, line.x2, line.y2, closestX,closestY);
                    if (!onSegment) {
                        continue;
                    }
                    
                    distX = closestX - this.pos.x;
                    distY = closestY - this.pos.y;
                    var distance = sqrt( (distX*distX) + (distY*distY) );
                    
                    if (distance <= this.r) {
                        return true;
                    }
                }
                return false;
            };
            
            this.display = function() {
                fill(255);
                noStroke();
                ellipse(this.pos.x, this.pos.y, 2*this.r, 2*this.r);
            };
            
        }

        function Ufo(x, y, s, maxVel) {
            this.pos = new PVector(x, y);
            this.vel = new PVector(0, 0);
            this.s = s;
            this.maxSpeed = maxVel;
            this.bullets = [];

            this.points = [];
            this.index = 0;
            
            this.fireTime = 60;
            
            this.out = false;
            this.deathTime = 0;
            this.dead = false;
            
            for(var i = 0; i < round(random(2, 6)); i++) {
                this.points.push(new PVector(random(this.s, width-this.s), random(this.s, height-this.s)));    
            }
            
            var ang = random(2*PI);
            this.points.push(new PVector(3/2*width*cos(ang), 3/2*height*sin(ang)));
            
            this.lines = [new Line(-s/4, s/3, -s/3, s/16), new Line(-s/3, s/16, -s, -s/8), new Line(-s, -s/8, -s + s/4, -s/2), new Line(-s + s/4, -s/2, s - s/4, -s/2), new Line(s - s/4, -s/2, s, -s/8), new Line(s, -s/8, s/3, s/16), new Line(s/3, s/16, s/4, s/3), new Line(s/4, s/3, -s/4, s/3)];
            
            for(var i = 0; i < this.lines.length; i++) {
                this.lines[i].y1 = -this.lines[i].y1;
                this.lines[i].y2 = -this.lines[i].y2;
            }
            this.time = 0;
            
            
            this.fire = function(pos, range) {
                if(sound) {
                    playSound(getSound("retro/laser3"));
                }
                var betweenRocket = atan2(this.pos.x - pos.x,  pos.y - this.pos.y);
                var angle = betweenRocket + radians(random(-range/2, range/2));
                this.bullets.push(new Bullet(this.pos.x, this.pos.y, 2.5, angle, this.vel)); 
                
            };
            
            this.update = function() {
                if(!this.dead) {
                    this.pos.add(this.vel);
                    this.moveTo(this.points[this.index]); 
                    if(this.time > 50 && this.index < this.points.length - 1) {
                        this.time = 0;
                        this.index ++;
                    } 
                    
                    if (this.index >= this.points.length - 1 && this.time > 0) {
                        this.out = true;                      
                    }
                }
                
                for(var i = this.bullets.length - 1; i >= 0; i--) {
                    this.bullets[i].update();
                    this.bullets[i].display();
                    if(this.bullets[i].pos.x > width || this.bullets[i].pos.x < 0 || this.bullets[i].pos.y > height || this.bullets[i].pos.y < 0) {
                        this.bullets.splice(i, 1);
                    } 
                }   
                
                this.fireTime++;
                
            };
            
            this.bulletHit = function(player) {
                for(var i = this.bullets.length - 1; i >= 0; i--) {
                    if(this.bullets[i].collides(player)) {
                        this.bullets.splice(i, 1);
                            if(player.power !== "invincible") {
                                player.alive = false;
                                if(sound) {
                                playSound(getSound("retro/rumble"));
                            }
                                player.initDirections();
                        }
                    }
                }
            };

            var points = new Array(floor(this.s));
            var vels = new Array(floor(this.s));
            for(var i = 0; i < this.s; i++) {
                points[i] = new PVector(0, 0);
                var angle = random(2*PI);
                var n = map(this.s, 10, 50, 0.5, 2.5);
                vels[i] = new PVector(random(n) * cos(angle), random(n) * sin(angle));
            }    

            this.death = function() {
                this.deathTime ++;
                pushMatrix();
                translate(this.pos.x, this.pos.y);
                for(var i = 0; i < points.length; i++) {
                    points[i].add(vels[i]);
                    fill(255);
                    ellipse(points[i].x, points[i].y, 1, 1);
                }
                popMatrix();
            };

            this.moveTo = function(toPos) {
                var angle = atan2(this.pos.x - toPos.x, this.pos.y - toPos.y);
                this.vel.x = this.maxSpeed*cos(angle + PI/2);
                this.vel.y = -this.maxSpeed*sin(angle + PI/2);
                if(this.pos.dist(toPos) < 5) {
                    this.vel.x = 0;
                    this.vel.y = 0;
                    this.time++;
                }
            };
            
            this.display = function() {
                stroke(255);
                pushMatrix();

                translate(this.pos.x, this.pos.y);
                for(var i = 0; i < this.lines.length; i++) {
                    this.lines[i].display();
                }
                line(-this.s, this.s/8, this.s, this.s/8);
                line(-this.s/3, -this.s/16, this.s/3, -this.s/16);
                popMatrix();
            };
        }

        function Asteroid(x, y, vx, vy, s) {
            this.initialPos = new PVector(x, y);
            this.pos = new PVector(x, y);
            this.vel = new PVector(vx, vy);
            this.pointValue = 10*floor(map(s, 20, 50, 10, 1));
            
            this.initialS = s;
            this.s = s;
            this.lines = [];
            this.vertices = [];
            
            this.angle = 0;
            
            this.time = 0;
            this.dead = false;
            
            this.boss = false;
            
            var angle = 0;
            var num = 10;
            
            //Assign vertices in the shape of a circle, but cut a random amount in or out of it to make a geometric shape.
            for(var i = 0; i < num; i++) {
                this.vertices.push([
                    (3/4*this.s + random(-this.s/3, this.s/3)) * cos(angle), 
                    (3/4*this.s + random(-this.s/3, this.s/3)) * sin(angle)
                    ]);
                angle += 2*PI/num;
            }
            
            //Connects the vertices into lines
            for(var i = 0; i < num; i++) {
                this.lines.push(new Line(this.vertices[i % num][0], this.vertices[i % num][1], this.vertices[(i + 1) % num][0], this.vertices[(i + 1) % num][1]));
            }

            this.changeSize = function(amount) {
                var s = this.s;
                s = constrain(s, 100, Infinity);
                if(amount > s) {
                    amount = s;
                }
                this.s -= amount;
                var multi = s/(s + amount);
                for(var i = 0; i < this.lines.length; i++) {
                    this.lines[i].x1 *= multi;
                    this.lines[i].y1 *= multi;
                    
                    this.lines[i].x2 *= multi;
                    this.lines[i].y2 *= multi;
                }
            };

            this.update = function() {
                this.pos.add(this.vel);
                this.angle = radians(30*this.vel.mag()/this.s);
            };
            
            var points = new Array(floor(this.s));
            var vels = new Array(floor(this.s));
            for(var i = 0; i < this.s; i++) {
                points[i] = new PVector(0, 0);
                var ang = random(2*PI);
                var n = map(this.s, 10, 50, 0.5, 2.5);
                vels[i] = new PVector(random(n) * cos(ang), random(n) * sin(ang));
            }    

            this.death = function() {
                this.time ++;
                pushMatrix();
                translate(this.pos.x, this.pos.y);
                for(var i = 0; i < points.length; i++) {
                    points[i].add(vels[i]);
                    fill(255);
                    ellipse(points[i].x, points[i].y, 1, 1);
                }
                popMatrix();
            };
            
            this.display = function() {
                noStroke();
                if(this.boss) {
                    rectMode(CORNER);
                    fill(255);
                    rect(width/2-3/8*width, 40, width-width/4, 30, 10);
                    fill(255, 255, 0);
                    rect(width/2-3/8*width, 40, map(this.s, 0, this.initialS, 0, 3*width/4), 30, 10);
                }
                
                stroke(255);
                pushMatrix();
                translate(this.pos.x, this.pos.y);
            
                for(var i = 0; i < this.lines.length; i++) {
                    var a = this.lines[i].x1;
                    var b = this.lines[i].y1;
                    
                    var c = this.lines[i].x2;
                    var d = this.lines[i].y2;
                    
                    var w = cos(this.angle);
                    var x = sin(this.angle);
                    var y = -x;
                    var z = w;

                    var aw = a*w + b*y;
                    var bx = a*x + b*z;
                    var cy = c*w + d*y;
                    var dz = c*x + d*z;
                    
                    this.lines[i].x1 = aw;
                    this.lines[i].y1 = bx;
                    
                    this.lines[i].x2 = cy;
                    this.lines[i].y2 = dz;
                    
                    this.lines[i].display();
                }
                popMatrix();
            };
        }

        var keys = [];
        function Player(x, y) {
            this.pos = new PVector(x, y);
            this.vel = new PVector(0, 0);
            this.maxVel = 5;
            this.acc = new PVector(0, 0);
            
            this.dummyAngle = 0;
            this.angle = 0;
            this.s = 10;
            
            this.bullets = [];
            this.asteroids = [];
            this.powers = [];
            this.fireCooldown = 20;
            this.time = this.fireCooldown;
            
            this.points = 0;
            this.livesLost = 0;
            this.pointsLife = 0;
            this.pointsForLife = 5000;
            
            this.lines = [new Line(0, this.s, -this.s/1.5, -this.s), new Line(-this.s/1.5, -this.s, 0, -this.s/2), new Line(0, -this.s/2, this.s/1.5, -this.s), new Line(this.s/1.5, -this.s, 0, this.s)];
            
            var staticLines = [new Line(0, this.s, -this.s/1.5, -this.s), new Line(-this.s/1.5, -this.s, 0, -this.s/2), new Line(0, -this.s/2, this.s/1.5, -this.s), new Line(this.s/1.5, -this.s, 0, this.s)];

            this.alive = true;
            this.animationTime = 0;
            this.deathVelocities = new Array(this.lines.length);
            this.deathDirections = new Array(this.lines.length);
            
            this.ufos = [];
            this.alarmTime = 0;
            
            this.shotsFired = 0;
            this.shotsHit = 0;
            this.accuracy = 0;
            
            this.lives = 3;
            
            this.pulseTime = 0;
            
            this.power = "none";
            
            
            for(var i = 0; i < this.lines.length; i++) {
                var line = this.lines[i];
                var normal = new PVector(line.y2 - line.y1, line.x1 - line.x2);
                if(i === 1 || i === 2) {
                    normal = new PVector(line.x1 - line.x2,  line.y1 - line.y2);
                    if(i === 2) {
                        normal.mult(-1);
                    }
                }
                
                normal.normalize();
                this.deathDirections[i] = normal;
            }
            
            this.initDirections = function() {
                for(var i = 0; i < this.deathVelocities.length; i++) {
                    this.deathVelocities[i] = new PVector( random(0.5, 1) * this.deathDirections[i].x, random(0.5, 1) * this.deathDirections[i].y);
                    if(abs(this.angle % 360) > 90 && abs(this.angle % 360) < 270) {
                        this.deathVelocities[i].mult(-1);
                    }
            
                }
            };
            
            var asteroidsTemp = [];
            var ufosTemp = [];
            var bossAccumulation = 0;
            var teleported = false;
            
            this.handlePowers = function() {
                for(var i = this.powers.length - 1; i >= 0; i--) {
                    var power = this.powers[i];
                    
                    if(power.time > power.deathTime) {
                        if(this.power === power.type) {
                            this.power = "none";
                        }
                        this.powers.splice(i, 1);
                        teleported = false;
                    }
                    
                    if(power.alive) {
                        power.update();
                        power.display();
                        
                        if(power.collides(this) && power.alive && this.alive) {
                            if(sound) {
                                    if(power.type === "nuke") {
            
                                        playSound(getSound("retro/boom2"));
                                    } else if(power.type === "hole") {
                                        playSound(getSound("retro/thruster-short"));
                                    } else if(power.type === "invincible") {
                                        playSound(getSound("retro/whistle2"));
                                    } else if(power.type === "time") {
                                        playSound(getSound("retro/jump1"));
                                    } else {
                                        playSound(getSound("retro/jump2"));
                                    }
                                }
                            this.power = power.type;
                            power.alive = false;
                        }
                        
                        for(var j = this.bullets.length - 1; j >= 0; j--) {
                            var bullet = this.bullets[j];
                            if(circleCircle(power.pos.x, power.pos.y, bullet.pos.x, bullet.pos.y, power.r, bullet.r) && this.alive) {
                                if(sound) {
                                    if(power.type === "nuke") {
            
                                        playSound(getSound("retro/boom2"));
                                    } else if(power.type === "hole") {
                                        playSound(getSound("retro/thruster-short"));
                                    } else if(power.type === "invincible") {
                                        playSound(getSound("retro/whistle2"));
                                    } else {
                                        playSound(getSound("retro/jump2"));
                                    }
                                }
                                this.power = power.type;
                                power.alive = false;
                                this.bullets.splice(j, 1);
                            }
                        }
                        
                        
                    } else {
                        power.deathAnimation();
                        if((power.type === "hole" && power.r > 0) || power.type === "magnet") {
                            var mult = 1;
                            var pos = power.pos;
                            var M = power.r/120;
                            if(this.power === "magnet") {
                                mult = -1;
                                pos = this.pos;
                                M = 0.7;
                            }
                            
                            for(var j = this.asteroids.length - 1; j >= 0; j--) {
                                var asteroid = this.asteroids[j];
                                var G = 15;
                                var r = PVector.sub(pos, asteroid.pos);
                                var dot = r.dot(r);
                                var F = PVector.mult(r, mult * G * M / dot); 
                                if(sqrt(dot) < 0.75*power.r && !asteroid.dead && power.type === "hole") {
                                    asteroid.dead = true;
                                    this.addPoints(asteroid);
                                    power.maxSize += asteroid.initialS/2;
                                }
                                asteroid.vel.add(F);
                            }
                            
                            for(var j = this.ufos.length - 1; j >= 0; j--) {
                                var ufo = this.ufos[j];
                                ufo.maxSpeed = 0;
                                var G = 500;
                                var r = PVector.sub(power.pos, ufo.pos);
                                var dot = r.dot(r);
                                var F = PVector.mult(r, mult * G * M/ dot); 
                                if(sqrt(dot) < 0.75*power.r && !ufo.dead && power.type === "hole") {
                                    ufo.dead = true;
                                    this.addPoints(ufo);
                                    power.maxSize += ufo.s/2;
                                }
                                ufo.vel.add(F);
                            }
                            
                            for(var j = this.bullets.length - 1; j >= 0; j--) {
                                var bullet = this.bullets[j];
                                bullet.maxSpeed = 0;
                                var G = 30;
                                var r = PVector.sub(power.pos, bullet.pos);
                                var dot = r.dot(r);
                                var F = PVector.mult(r, mult * G * M/ dot); 
                                if(sqrt(dot) < 0.75*power.r && !bullet.kill && power.type === "hole") {
                                    bullet.kill = true;
                                }
                                bullet.vel.add(F);
                            }
                            
                            for(var j = this.powers.length - 1; j >= 0; j--) {
                                if(i !== j) {
                                    var p = this.powers[j];
                                    p.maxSpeed = 0;
                                    var G = 30;
                                    var r = PVector.sub(power.pos, p.pos);
                                    var dot = r.dot(r);
                                    var F = PVector.mult(r, mult * G * M/ dot); 
                                    if(sqrt(dot) < 0.75*power.r && p.alive && power.type === "hole") {
                                        p.alive = false;
                                    }
                                    p.vel.add(F);
                                }
                            }
                            
                            if(this.power !== "magnet") {
                                var G = 5;
                                var r = PVector.sub(power.pos, this.pos);
                                var dot = r.dot(r);
                                var F = PVector.mult(r, G / dot); 
                                if(sqrt(dot) < 0.75*power.r && this.alive) {
                                    this.alive = false;
                                    if(sound) {playSound(getSound("retro/rumble")); }
                                    this.initDirections();
                                }
                                this.vel.add(F);
                            }
                        } else if(power.type === "nuke") {
                            for(var j = this.asteroids.length - 1; j >= 0; j--) {
                                var asteroid = this.asteroids[j];
                                var d = dist(asteroid.pos.x, asteroid.pos.y, power.pos.x, power.pos.y);
                                if(d <= (power.r + asteroid.s/2) && !asteroid.dead) {
                                    asteroid.dead = true;  
                                    this.addPoints(asteroid);
                                }
                            }
                            
                            for(var j = this.ufos.length - 1; j >= 0; j--) {
                                var ufo = this.ufos[j];
                                var d = dist(ufo.pos.x, ufo.pos.y, power.pos.x, power.pos.y);
                                if(d <= power.r && !ufo.dead) {
                                    ufo.dead = true; 
                                    this.addPoints(ufo);
                                }
                            }
                            
                            for(var j = this.bullets.length - 1; j >= 0; j--) {
                                var bullet = this.bullets[j];
                                var d = dist(bullet.pos.x, bullet.pos.y, power.pos.x, power.pos.y);
                                if(d <= (power.r + bullet.r) && !bullet.kill) {
                                    bullet.kill = true; 
                                }
                            }
                            
                            for(var j = this.powers.length - 1; j >= 0; j--) {
                                if(i !== j) {
                                    var p = this.powers[j];
                                    var d = dist(p.pos.x, p.pos.y, power.pos.x, power.pos.y);
                                    if(d <= (power.r + p.r) && p.alive) {
                                        p.alive = false; 
                                    }
                                }
                            }
                            
                            if(dist(this.pos.x, this.pos.y, power.pos.x, power.pos.y) <= power.r && this.alive) {
                                this.alive = false;  
                                if(sound) {playSound(getSound("retro/rumble")); }
                                this.initDirections();
                            }
                        } else if(power.type === "time") {
                            if(power.time < 30) {
                                asteroidsTemp = new Array(this.asteroids.length);
                                
                                for(var j = 0; j < this.asteroids.length; j++) {
                                    asteroidsTemp[j] = Object.assign({}, this.asteroids[j]);
                                }
                                
                                ufosTemp = new Array(this.ufos.length);
                                
                                for(var j = 0; j < this.ufos.length; j++) {
                                    ufosTemp[j] = Object.assign({}, this.ufos[j]);
                                }
                            } else if(power.time < 4.5*60) {
                                for(var j = 0; j < asteroidsTemp.length; j++) {
                                    var current = asteroidsTemp[j];
                                    for(var k = this.bullets.length - 1; k >= 0; k--) {
                        if(this.bullets[k].collides(current)) {
                            if(!current.dead) {
                                if(current.boss) {
                                    var dmg = 2*this.bullets[k].r;
                                    bossAccumulation += dmg;
                                    if(random(1) < 0.1) {
                                        bossAccumulation += 2*dmg;
                                    }
                                } else if(current.s >= 25 && this.power !== "one-shot") {
                                    asteroidsTemp.push(new Asteroid(current.pos.x, current.pos.y - current.s/2, current.vel.x + this.bullets[k].vel.x/10,  -abs(current.vel.y)/2 - abs(this.bullets[k].vel.y)/5, current.s/1.75));
                                    asteroidsTemp.push(new Asteroid(current.pos.x, current.pos.y + current.s/2, current.vel.x + this.bullets[k].vel.x/10, abs(current.vel.y)/2 + abs(this.bullets[k].vel).y/5, current.s/1.75));
                                }
                                                    
                                this.bullets.splice(k, 1);
                                this.shotsHit ++;
                                if(current.boss && current.s <= 0) {
                                    this.livesLost --;
                                    this.addPoints(current);
                                    current.dead = true;
                                } else if(!current.boss) {
                                    this.addPoints(current);
                                    current.dead = true;
                                } 
                            }
                        }
                    }
                                }
                                for(var j = 0; j < ufosTemp.length; j++) {
                                    var current = ufosTemp[j];
                                    for(var k = this.bullets.length - 1; k >= 0; k--) {
                        if(this.bullets[k].collides(current)) {
                            this.bullets.splice(k, 1);
                            if(!current.dead) {
                                this.addPoints(current);
                                this.shotsHit++;
                                current.dead = true;
                            }
                        }
                    }
                                }
                            } else {
                                this.asteroids = asteroidsTemp;
                                for(var j = 0; j < this.asteroids.length; j++) {
                                    if(this.asteroids[j].boss && bossAccumulation !== 0) {
                                        this.asteroids[j].changeSize(bossAccumulation);
                                        bossAccumulation = 0;
                                        if(this.asteroids[j].s <= 0) {
                                            this.livesLost --;
                                            this.addPoints(this.asteroids[j]);
                                            this.asteroids[j].dead = true;
                                        } 
                                    }
                                    
                                    
                                }
                                this.ufos = ufosTemp;
                            }
                        } else if(power.type === "shield") {
                            for(var j = 0; j < this.asteroids.length; j++) {
                                var asteroid = this.asteroids[j];
                        
                                var angle = atan2(asteroid.pos.y - this.pos.y, asteroid.pos.x - this.pos.x) - PI/2;
                                angle %= (2*PI);
                                if(angle < 0) {
                                    angle += 2*PI; 
                                }
                            
                                var angle2 = this.angle % (2*PI);
                                if(angle2 < 0) {
                                    angle2 += 2*PI; 
                                }
                                
                                
                                if(dist(this.pos.x, this.pos.y, asteroid.pos.x, asteroid.pos.y) < (asteroid.s/2 + 50) && angle >= angle2 - PI/2 && angle <= angle2 + PI/2) {
                                    var mag = asteroid.vel.mag();
                                    asteroid.pos.x += mag*cos(angle2 + PI/2);
                                    asteroid.pos.y += mag*sin(angle2 + PI/2);
                                    asteroid.vel.x = mag*cos(angle2 + PI/2);
                                    asteroid.vel.y = mag*sin(angle2 + PI/2);
                                }
                            }
                            for(var j = 0; j < this.ufos.length; j++) {
                                var ufo = this.ufos[j];
                                
                                for(var k = 0; k < ufo.bullets.length; k++) {
                                    var bullet = ufo.bullets[k];
                                    var angle = atan2(bullet.pos.y - this.pos.y, bullet.pos.x - this.pos.x) - PI/2;
                                    angle %= (2*PI);
                                    if(angle < 0) {
                                        angle += 2*PI; 
                                    }
                                
                                    var angle2 = this.angle % (2*PI);
                                    if(angle2 < 0) {
                                        angle2 += 2*PI; 
                                    }
                                    
                                    
                                    if(dist(this.pos.x, this.pos.y, bullet.pos.x, bullet.pos.y) < (bullet.r + 50) && angle >= angle2 - PI/2 && angle <= angle2 + PI/2) {
                                        var mag = bullet.vel.mag();
                                        this.bullets.push(new Bullet(bullet.pos.x, bullet.pos.y, bullet.r, 0, null));
                                        this.bullets[this.bullets.length - 1].vel.x = mag*cos(angle2 + PI/2);
                                        this.bullets[this.bullets.length - 1].vel.y = mag*sin(angle2 + PI/2);
                                        ufo.bullets.splice(k, 1);
                                    }
                                }
                        
                                
                            }
                        } else if(power.type === "teleport" && !teleported && power.time < 60) {
                            var x = 0;
                            var y = 0;
                            while(!teleported) {
                                x = random(width);
                                y = random(height);
                                teleported = true;
                                for(var j = 0; j < this.asteroids.length; j++) {
                                    if(dist(x, y, this.asteroids[j].pos.x, this.asteroids[j].pos.y) <= this.asteroids[j].s) {
                                    teleported = false;
                                    }
                                }
                            }
                            this.pos.x = x;
                            this.pos.y = y;
                            
                        } else if(power.type === "homing") {
                            for(var j = 0; j < this.bullets.length; j++) {
                                var bullet = this.bullets[j];
                                var M = 1;
                                
                                var mins = [Infinity, Infinity, Infinity];
                                var angles = [0, 0, 0];
                                
                                for(var k = 0; k < this.asteroids.length; k++) {
                                    var asteroid = this.asteroids[k];
                                    var d = dist(asteroid.pos.x, asteroid.pos.y, bullet.pos.x, bullet.pos.y);
                                    if(d < mins[0]) {
                                        mins[0] = d;
                                        angles[0] = atan2(bullet.pos.y - asteroid.pos.y, bullet.pos.x - asteroid.pos.y);
                                    }
                                }
                                
                                for(var k = 0; k < this.ufos.length; k++) {
                                    var ufo = this.ufos[k];
                                    var d = dist(ufo.pos.x, ufo.pos.y, bullet.pos.x, bullet.pos.y);
                                    if(d < mins[1]) {
                                        mins[1] = d;
                                        angles[1] = atan2(bullet.pos.y - ufo.pos.y, bullet.pos.x - ufo.pos.y);
                                    }
                                }

                                for(var k = 0; k < this.powers.length; k++) {
                                    if(i !== k) {
                                        var p = this.powers[k];
                                        var d = dist(p.pos.x, p.pos.y, bullet.pos.x, bullet.pos.y);
                                        if(d < mins[2]) {
                                            mins[2] = d;
                                            angles[2] = atan2(bullet.pos.y - p.pos.y, bullet.pos.x - p.pos.y);
                                        }
                                    }
                                }
                                
                                var minIndex = -1;
                                var min = Infinity;
                                
                                for(var k = 0; k < mins.length; k++) {
                                    if(mins[k] < min) {
                                        min = mins[k];
                                        minIndex = k;
                                    }   
                                }
                                
                                if(minIndex >= 0) {
                                    bullet.vel.x += -1/2*sin(angles[minIndex] + PI/2);
                                    bullet.vel.y += 1/2*cos(angles[minIndex] + PI/2);
                                }
                            }
                        }
                    }
                }
            };
            
            this.handleUfos = function() {
                if(this.ufos.length > 0 && this.alive) {
                    this.alarmTime++;
                    if(this.alarmTime > 50) {
                        if(sound) {
                            playSound(getSound("retro/laser4"));
                        }
                        this.alarmTime = 0;
                    }
                } else {
                    this.alarmTime = 0;
                }
                
                for(var i = this.ufos.length - 1; i >= 0; i--) {
                    var current = this.ufos[i];
                    
                    current.bulletHit(this);
                    
                    if(current.fireTime > 60 && current.index < current.points.length - 1 && current.index > 0 && this.alive && !current.dead) {
                        current.fire(this.pos, 10);
                        current.fireTime = 0;
                    }  
                    
                    if(current.out) {
                        this.ufos.splice(i, 1);
                    }
                    
                    if(this.power !== "time") {
                        current.update();
                    }
                    if(!current.dead) {
                        current.display();
                    } else {
                        current.death();
                    }
                    
                    if(current.deathTime > 20  && current.bullets.length === 0) {
                        this.ufos.splice(i, 1);
                    }
                    
                    if(this.alive && !current.dead) {
                        this.hits(current);
                    }
                    
                    for(var j = this.bullets.length - 1; j >= 0; j--) {
                        if(this.bullets[j].collides(current)) {
                            this.bullets.splice(j, 1);
                            if(!current.dead) {
                                this.addPoints(current);
                                this.shotsHit++;
                                current.dead = true;
                            }
                        }
                    }
                }
            };
            
            this.addPoints = function(asteroid) {
                var points = asteroid.pointValue;
                if(isNaN(points)) {
                    points = 500;
                } else if(asteroid.boss) {
                    points = 3*round(asteroid.initialS);
                }

                this.points += points;
                
                if(sound) {
                    if(!isNaN(asteroid.pointValue)) {
                        this.playAsteroid(asteroid);
                    } else {
                        playSound(getSound("retro/laser2"));
                    }
                }
            };
            
            //Running everything to do with asteroids
            this.handleAsteroids = function() {
                for(var i = this.asteroids.length - 1; i >= 0; i--) {
                    var current = this.asteroids[i];
                    
                    if(this.alive && !current.dead) {
                        this.hits(current);
                    }
                    
                    if(!current.dead) {
                        if(this.power !== "time") {
                            current.update();
                        } else {
                            current.angle = 0;
                        }
                        current.display();
                    } else {
                        current.death();
                    }
                    
                    if(current.time > 20) {
                        this.asteroids.splice(i, 1);
                    }
                    
                    for(var j = this.bullets.length - 1; j >= 0; j--) {
                        if(this.bullets[j].collides(current) && this.power !== "time") {
                            if(!current.dead) {
                                if(current.boss) {
                                    var dmg = 2*this.bullets[j].r;
                                    current.changeSize(dmg);
                                    if(random(1) < 0.1) {
                                        current.changeSize(2*dmg);
                                    }
                                } else if(current.s >= 25 && this.power !== "one-shot") {
                                    this.asteroids.push(new Asteroid(current.pos.x, current.pos.y - current.s/2, current.vel.x + this.bullets[j].vel.x/10,  -abs(current.vel.y)/2 - abs(this.bullets[j].vel.y)/5, current.s/1.75));
                                    this.asteroids.push(new Asteroid(current.pos.x, current.pos.y + current.s/2, current.vel.x + this.bullets[j].vel.x/10, abs(current.vel.y)/2 + abs(this.bullets[j].vel).y/5, current.s/1.75));
                                }
                                                    
                                this.bullets.splice(j, 1);
                                this.shotsHit ++;
                                if(current.boss && current.s <= 0) {
                                    this.livesLost --;
                                    this.addPoints(current);
                                    current.dead = true;
                                } else if(!current.boss) {
                                    this.addPoints(current);
                                    current.dead = true;
                                } 
                            }
                        }
                    }

                    if(current.initialPos.dist(current.pos) > 2*width) {
                        this.asteroids.splice(i, 1);
                    }
                }
            };
            
            this.spawnUfo = function() {
                var angle = random(2*PI);
                var distance = width*1.5;
                this.ufos.push(new Ufo(distance * cos(angle), distance * sin(angle), random(20, 30), random(3, 5)));
            };
            
            this.update = function() {
                this.vel.add(this.acc);
                this.pos.add(this.vel);

                this.lives = floor(this.points/this.pointsForLife) - this.livesLost + 3;
                
                if(this.power !== "spam" && this.power !== "lazer") {
                    this.fireCooldown = 20;
                } else if(this.power !== "pulse") {
                    this.fireCooldown = 0;
                }
            
                
                this.vel.x = constrain(this.vel.x, -this.maxVel, this.maxVel);
                this.vel.y = constrain(this.vel.y, -this.maxVel, this.maxVel);
                
                //Loop-around
                this.pos.x %= width;
                this.pos.y %= height;
                if(this.pos.x < 0) {
                    this.pos.x = width;
                }
                if(this.pos.y < 0) {
                    this.pos.y = height;
                }
            
                if(this.time < 0) {
                    this.time = this.fireCooldown;
                } else if(this.time < this.fireCooldown) {
                    this.time --;
                }
                
                this.accuracy = 100 * this.shotsHit/this.shotsFired;
                if(isNaN(this.accuracy)) {
                    this.accuracy = 0;
                }
                
            };
            
            this.spawnAsteroid = function() {
                var angle = random(2*PI);
                var distance = width/1.5;
                var offset = new PVector(width/2, height/2);
                
                this.asteroids.push(new Asteroid(distance*cos(angle)+offset.x, distance*sin(angle)+offset.y, -random(1, 5)*sin(angle + PI/2), random(1, 5)*cos(angle + PI/2), random(20, 50)));
            };
            
            this.spawnBoss = function() {
                var angle = random(2*PI);
                var s = random(400, 600);
                var distance = width/1.5 + s/2;
                var offset = new PVector(width/2, height/2);
                
                this.asteroids.push(new Asteroid(distance*cos(angle)+offset.x, distance*sin(angle)+offset.y, -random(0.25, 1)*sin(angle + PI/2), random(0.25, 1)*cos(angle + PI/2), s));
                
                this.asteroids[this.asteroids.length - 1].boss = true;
            };
            
            this.move = function() {
                var acc = 5/60;
                if(this.power === "invincible") {
                    acc = 8/60;
                }

                if(keys[UP] || keys[87]) {
                    this.acc.set(acc * cos(this.angle + PI/2), acc * sin(this.angle + PI/2));
                } else {
                    this.acc.set(0, 0);
                    this.vel.mult(0.99);
                }
                
                if(keys[RIGHT] || keys[68]) {
                    this.dummyAngle = radians(7);
                } else if(!keys[LEFT] && !keys[65]) {
                    this.dummyAngle = 0;
                }
                
                if(keys[LEFT] || keys[65]) {
                    this.dummyAngle = -radians(7);
                } else if(!keys[RIGHT]&& !keys[68]) {
                    this.dummyAngle = 0;
                }
                
                this.angle += this.dummyAngle;
                
                if(keys[32] && this.alive) {
                    this.fire();
                    if(this.power === "pulse") {
                        this.pulseTime += 0.1;
                    }
                } else {
                    this.time = this.fireCooldown;
                }
                
                if(this.pulseTime > 0) {
                    this.pulseTime = floor(this.pulseTime);
                    this.pulseTime ++;
                    if(this.pulseTime % 2 === 0) {
                        this.fire();
                    }
                    if(this.pulseTime > 15) {
                        this.pulseTime = 0;
                    }
                }
            };
            
            this.fire = function() {
                if(this.power === "shield") {
                    return;
                }
                var vel = 0;
                if(this.power === "lazer") {
                    vel = 10/60;
                } else if(this.power === "spam") {
                    vel = 5/60;
                } else if(this.power === "spray") {
                    vel = 10/60;
                }
                if(this.power === "spam" || this.power === "lazer") {
                    this.vel.add(-vel * cos(this.angle + PI/2), -vel * sin(this.angle + PI/2));
                    if(this.power === "lazer") {
                        this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 10,  this.angle, this.vel));
                        this.shotsFired++;
                    } else {
                        this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 2.5,  this.angle, this.vel));
                        this.shotsFired ++;
                    }
                } else if(this.time === this.fireCooldown) {
                    if(sound && this.fireCooldown > 0) {
                        playSound(getSound("retro/laser1"));
                    }
                    
                    this.vel.add(-vel * cos(this.angle + PI/2), -vel * sin(this.angle + PI/2));
                    
                    if(this.power === "spray") {
                        for(var i = -0.1; i <= 0.1; i += 0.1) {
                            this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 2, this.angle + i * radians(170), this.vel));
                            this.shotsFired ++;
                        }
                    } else if(this.power === "mine") {
                        this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 5,  this.angle, null));
                        this.shotsFired++;
                    } else if(this.power === "two") {
                        this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 2.5,  this.angle, this.vel));
                        
                        this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 2.5,  this.angle + PI, PVector.mult(this.vel, -1)));
                        this.shotsFired += 2;
                    } else if(this.power === "lazer") {
                        this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 10,  this.angle, this.vel));
                        this.shotsFired++;
                    } else if(this.power === "one-shot") {
                        this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 5,  this.angle, this.vel));
                        this.shotsFired ++;
                    } else {
                        this.bullets.push(new Bullet(this.pos.x + this.s * cos(this.angle + PI/2), this.pos.y + this.s*sin(this.angle + PI/2), 2.5,  this.angle, this.vel));
                        this.shotsFired ++;
                    }
                    
                    this.time--;
                }
            };
            
            this.spawnPower = function() {
                this.powers.push(new Power());
            };
            
            this.playAsteroid = function(asteroid) {
                if(sound) {
                    if(asteroid.s >= 45) {
                        playSound(getSound("retro/boom2"));
                    } else if(asteroid.s >= 25) {
                        playSound(getSound("retro/boom1"));
                    } else {
                        playSound(getSound("retro/hit2"));
                    }
                }
            };
            
            this.hits = function(asteroid){
                for(var i = 0; i < asteroid.lines.length; i++) {
                    var line1 = Object.assign({}, asteroid.lines[i]);
                    line1.x1 += asteroid.pos.x;
                    line1.x2 += asteroid.pos.x;
                    line1.y1 += asteroid.pos.y;
                    line1.y2 += asteroid.pos.y;
                    
                    for(var j = 0; j < this.lines.length; j++) {
                        var line2 = Object.assign({}, this.lines[j]);
                        line2.x1 += this.pos.x;
                        line2.x2 += this.pos.x;
                        line2.y1 += this.pos.y;
                        line2.y2 += this.pos.y;
                        
                        var s1_x = line1.x2 - line1.x1;     
                        var s1_y = line1.y2 - line1.y1;
                        var s2_x = line2.x2 - line2.x1;     
                        var s2_y = line2.y2 - line2.y1;

                        var den = (-s2_x * s1_y + s1_x * s2_y);
                        
                        if(den === 0) {
                            continue;
                        }
                        
                        var s = (-s1_y * (line1.x1 - line2.x1) + s1_x * (line1.y1 - line2.y1)) / den;
                        
                        var t = ( s2_x * (line1.y1 - line2.y1) - s2_y * (line1.x1 - line2.x1)) / den;
                        
                        if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {
                            if(!asteroid.boss) {
                                asteroid.dead = true;
                            }
                            if(this.power !== "invincible" && this.power !== "time") {
                                this.alive = false;
                                if(sound) {
                                    playSound(getSound("retro/rumble"));
                                }
                                this.initDirections();
                            } else if(this.power === "invincible") {
                                this.addPoints(asteroid);
                            }
                            return;
                        }
                    }
                }
            };
            
            this.displayBullets = function() {
                for(var i = this.bullets.length - 1; i >= 0; i--) {
                    this.bullets[i].update();
                    this.bullets[i].display();

                    if(this.bullets[i].kill) {
                        this.bullets.splice(i, 1);
                    }
                }
                
            };
            
            this.deathAnimation = function() {
                this.bullets = [];
                for(var i = 0; i < this.ufos.length; i++) {
                    this.ufos[i].bullets = [];
                }
                this.animationTime ++;
                pushMatrix();
                
                translate(this.pos.x, this.pos.y);
                var velocities = [];
                
                for(var i = 0; i < this.lines.length; i++) {
                    this.lines[i].x1 += this.deathVelocities[i].x/10;
                    this.lines[i].x2 += this.deathVelocities[i].x/10;
                    this.lines[i].y1 += this.deathVelocities[i].y/5;
                    this.lines[i].y2 += this.deathVelocities[i].y/5;
                    
                    this.lines[i].display();
                }
                
                if(this.animationTime % floor(30) === 0) {
                        this.lines.pop();
                }
                
                popMatrix();
                
                if(this.animationTime > 60*3) {
                    this.alive = true;
                    if(this.lives > 0) {
                        this.asteroids = [];
                        this.ufos = [];
                        this.powers = [];
                        this.power = "none";
                        this.pulseTime = 0;
                    }
                    this.lines = [new Line(0, this.s, -this.s/1.5, -this.s), new Line(-this.s/1.5, -this.s, 0, -this.s/2), new Line(0, -this.s/2, this.s/1.5, -this.s), new Line(this.s/1.5, -this.s, 0, this.s)];
                    this.pos.set(width/2, height/2);
                    this.vel.set(0, 0);
                    this.dummyAngle = 0;
                    this.angle = 0;
                    this.animationTime = 0;
                    this.livesLost++;
                    // this.lives--;
                }
            };
            
            this.display = function() {
                pushMatrix();
                translate(this.pos.x, this.pos.y);
                noFill();
                stroke(255);
                rotate(this.angle);
                if(this.power === "shield") {
                    strokeWeight(5);
                    arc(0, 10, 50, 50, 0, PI);
                }
                strokeWeight(1);
                var mag = sqrt(sq(this.vel.x) + sq(this.vel.y));
                if(keys[87] || keys[UP]) {
                    if(mag > 4) {
                        beginShape();
                        vertex(-this.s/2, -this.s/1.5 - 2);
                        vertex(0, -3*this.s/1.5);
                        vertex(this.s/2, -this.s/1.5 - 2);
                        endShape();
                    } else if(mag > 2) {
                        beginShape();
                        vertex(-this.s/2, -this.s/1.5 - 2);
                        vertex(0, -2.5*this.s/1.5);
                        vertex(this.s/2, -this.s/1.5 - 2);
                        endShape();
                    } else if(mag > 0) {
                        
                        beginShape();
                        vertex(-this.s/2, -this.s/1.5 - 2);
                        vertex(0, -2*this.s/1.5);
                        vertex(this.s/2, -this.s/1.5 - 2);
                        endShape();
                    }
                }
                popMatrix();
                
                pushMatrix();
                translate(this.pos.x, this.pos.y);
                
                noFill();
                stroke(255);
                strokeWeight(1);
                if(this.power === "invincible") {
                    stroke(255, 255, 0);
                }
                
                for(var i = 0; i < this.lines.length; i++) {
                    var a = this.lines[i].x1;
                    var b = this.lines[i].y1;
                    
                    var c = this.lines[i].x2;
                    var d = this.lines[i].y2;
                    
                    var w = cos(this.dummyAngle);
                    var x = sin(this.dummyAngle);
                    var y = -x;
                    var z = w;
                    
                    var aw = a*w + b*y;
                    var bx = a*x + b*z;
                    var cy = c*w + d*y;
                    var dz = c*x + d*z;
                    
                    this.lines[i].x1 = aw;
                    this.lines[i].y1 = bx;
                    
                    this.lines[i].x2 = cy;
                    this.lines[i].y2 = dz;
                    
                    this.lines[i].display();
                }        
                
                popMatrix();

                stroke(255);
            };
            
            this.displayLives = function(x) {
                for(var j = 0; j < this.lives; j++) {
                    pushMatrix();
                    translate(x + 20*j, 20);
                    for(var i = 0; i < staticLines.length; i++) {
                        staticLines[i].display();
                    }
                    popMatrix();
                }
            };
        }

        var rocket = new Player(-10*width, -10*height);

        var speed = 60 * 2;
        var time = 0;

        var speed2 = 60*round(random(12, 20));
        var time2 = 0;

        var speed3 = 60*round(random(10, 15));
        var time3 = 0;

        var speed4 = 60*60;
        var time4 = 0;

        var alive = true;
        textFont(createFont("monospace"), 40);

        var pointsText = "0";
        draw = function() {    
            background(0);
            rocket.handlePowers();
            strokeWeight(2);
            rocket.handleAsteroids();
            rocket.handleUfos();
            strokeWeight(1);
            
            if(rocket.power !== "time") {
                time++;
                if(time % speed === 0) {
                    rocket.spawnAsteroid();
                    var multiplier = constrain(map(rocket.points, 0, 50000, 1, 0.75), 0.75, 1);
                    if(scene === "title") {
                        multiplier = 0.5; 
                    }
                    speed = round(random(60, 60*1.5) * multiplier);
                    if(speed % 2 !== 0) {
                        speed ++;
                    }
                    time = 0;
                }
            }

            if(scene === "title") {
                textSize(60);
                fill(255);
                textAlign(CENTER, CENTER);
                text("Asteroids", width/2, height/3);
                
                textAlign(CENTER, CENTER);
                textSize(20);
                text("[CLICK TO PLAY]", width/2, height/2);
            } else if(scene === "game") {
                if(rocket.alive) {
                    rocket.displayBullets();
                    
                    rocket.move();
                    rocket.update();
                    rocket.display();
                    
                    if(rocket.power !== "time") {
                    time2++;
                        if(time2 % speed2 === 0) {
                            rocket.spawnUfo();
                            var multiplier = constrain(map(rocket.points, 0, 50000, 1, 0.5), 0.5, 1);
                            speed2 = round(random(60*15, 60*22) * multiplier);
                            if(speed2 % 2 !== 0) {
                                speed2 ++;
                            }
                            time2 = 0;
                        }
                
                        time3++;
                        if(time3 % speed3 === 0) {
                            rocket.spawnPower();
                            var multiplier = constrain(map(rocket.points, 0, 50000, 1, 0.4), 0.4, 1);
                            
                            speed3 = round(random(60*12, 60*15) * multiplier);

                            if(speed3 % 2 !== 0) {
                                speed3 ++;
                            }
                            time3 = 0;
                        }
                        
                        time4++;
                        if(time4 % speed4 === 0) {
                            rocket.spawnBoss();
                        
                            speed4 = 60*75;
                            
                            if(speed4 % 2 !== 0) {
                                speed4 ++;
                            }
                            time4 = 0;
                        }
                    }
                } else {
                    rocket.deathAnimation();
                    if(rocket.lives < 0) {
                        scene = "game over";
                    }
                    time = 0;
                    time2 = 0;
                }
                
                pointsText = rocket.points + "";
                
                fill(255);
                textSize(40);
                rocket.displayLives(textWidth(pointsText) + 20);
                textAlign(LEFT, TOP);
                text(pointsText, 5, 0);
                
                textSize(20);
                textAlign(RIGHT, TOP);
                text("Accuracy: " + round(rocket.accuracy) + "%", width, 0);
            } else if(scene === "game over") {
                rocket.pos.set(-10*width, -10*height);
                
                noStroke();
                textSize(60);
                textAlign(CENTER, CENTER);
                fill(255);
                text("GAME OVER", width/2, height/3.5);
                
                textSize(30);
                text("Score: " + rocket.points, width/2, height/2.7);
                textSize(25);
                text("Accuracy: " + round(rocket.accuracy) + "%", width/2, height/2.4);
                
                textSize(20);
                text("[CLICK TO PLAY]", width/2, height/2);
            }
            
        };

        mousePressed = function() {
            if(scene !== "game")  {
                scene = "game";
                rocket = new Player(width/2, height/2);
            }
        };

        keyPressed = function() {
            keys[keyCode] = true;
        };

        keyReleased = function() {
            keys[keyCode] = false;
        };
    }};
   
    var canvas = document.getElementById("canvas"); 

    var processingInstance = new Processing(canvas, sketchProc);q
